{"ast":null,"code":"var _jsxFileName = \"/Users/stefanovolpatti/Web Development/react-complete-guide/18-Redux/redux-project/src/components/Counter.js\";\nimport { Component } from 'react';\nimport { connect } from 'react-redux'; //  hooks di redux\n\nimport classes from './Counter.module.css';\n/*\n //  useDispatch e useSelector METHOD\n const Counter = () =>\n const dispatch = useDispatch()  //  Richiamo dispatch\n const counter = useSelector(state => state.counter) //  avrò sempre l'ultimo state aggiornato\n\n // funzione per incrementare\n const incrementHandler = () => {\n dispatch({type: 'increment'})\n }\n // funzione per decrementare\n const decrementHandler = () => {\n dispatch({type: 'decrement'})\n }\n\n const toggleCounterHandler = () => {\n };\n\n */\n// CONNECT METHOD\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Counter extends Component {\n  incrementHandler() {\n    this.props.increment();\n  }\n\n  decrementHandler() {\n    this.props.decrement();\n  }\n\n  toggleCounterHandler() {}\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      className: classes.counter,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Redux Counter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.value,\n        children: this.props.counter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.incrementHandler.bind(),\n          children: \"Increment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.decrementHandler.bind,\n          children: \"Decrement\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.toggleCounterHandler,\n        children: \"Toggle Counter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    counter: state.counter\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    increment: () => dispatch({\n      type: 'increment'\n    }),\n    decrement: () => dispatch({\n      type: 'decrement'\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter);","map":{"version":3,"sources":["/Users/stefanovolpatti/Web Development/react-complete-guide/18-Redux/redux-project/src/components/Counter.js"],"names":["Component","connect","classes","Counter","incrementHandler","props","increment","decrementHandler","decrement","toggleCounterHandler","render","counter","value","bind","mapStateToProps","state","mapDispatchToProps","dispatch","type"],"mappings":";AAAA,SAAQA,SAAR,QAAwB,OAAxB;AACA,SAAQC,OAAR,QAAsB,aAAtB,C,CAAoC;;AACpC,OAAOC,OAAP,MAAoB,sBAApB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AACA,MAAMC,OAAN,SAAsBH,SAAtB,CAAgC;AAC/BI,EAAAA,gBAAgB,GAAG;AAClB,SAAKC,KAAL,CAAWC,SAAX;AACA;;AAEDC,EAAAA,gBAAgB,GAAG;AAClB,SAAKF,KAAL,CAAWG,SAAX;AACA;;AAEDC,EAAAA,oBAAoB,GAAG,CACtB;;AAEDC,EAAAA,MAAM,GAAG;AACR,wBACC;AAAM,MAAA,SAAS,EAAER,OAAO,CAACS,OAAzB;AAAA,8BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AAAK,QAAA,SAAS,EAAET,OAAO,CAACU,KAAxB;AAAA,kBAAgC,KAAKP,KAAL,CAAWM;AAA3C;AAAA;AAAA;AAAA;AAAA,cAFD,eAGC;AAAA,gCAMC;AAAQ,UAAA,OAAO,EAAE,KAAKP,gBAAL,CAAsBS,IAAtB,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAND,eAOC;AAAQ,UAAA,OAAO,EAAE,KAAKN,gBAAL,CAAsBM,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPD;AAAA;AAAA;AAAA;AAAA;AAAA,cAHD,eAYC;AAAQ,QAAA,OAAO,EAAE,KAAKJ,oBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAgBA;;AA7B8B;;AAgChC,MAAMK,eAAe,GAAGC,KAAK,IAAI;AAChC,SAAO;AACNJ,IAAAA,OAAO,EAAEI,KAAK,CAACJ;AADT,GAAP;AAGA,CAJD;;AAMA,MAAMK,kBAAkB,GAAGC,QAAQ,IAAI;AACtC,SAAO;AACNX,IAAAA,SAAS,EAAE,MAAMW,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAE;AAAP,KAAD,CADnB;AAENV,IAAAA,SAAS,EAAE,MAAMS,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAE;AAAP,KAAD;AAFnB,GAAP;AAIA,CALD;;AAOA,eAAejB,OAAO,CAACa,eAAD,EAAkBE,kBAAlB,CAAP,CAA6Cb,OAA7C,CAAf","sourcesContent":["import {Component} from 'react'\nimport {connect} from 'react-redux' //  hooks di redux\nimport classes from './Counter.module.css';\n\n/*\n //  useDispatch e useSelector METHOD\n const Counter = () =>\n const dispatch = useDispatch()  //  Richiamo dispatch\n const counter = useSelector(state => state.counter) //  avrò sempre l'ultimo state aggiornato\n\n // funzione per incrementare\n const incrementHandler = () => {\n dispatch({type: 'increment'})\n }\n // funzione per decrementare\n const decrementHandler = () => {\n dispatch({type: 'decrement'})\n }\n\n const toggleCounterHandler = () => {\n };\n\n */\n\n// CONNECT METHOD\nclass Counter extends Component {\n\tincrementHandler() {\n\t\tthis.props.increment()\n\t}\n\n\tdecrementHandler() {\n\t\tthis.props.decrement()\n\t}\n\n\ttoggleCounterHandler() {\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<main className={classes.counter}>\n\t\t\t\t<h1>Redux Counter</h1>\n\t\t\t\t<div className={classes.value}>{this.props.counter}</div>\n\t\t\t\t<div>\n\t\t\t\t\t{/* Con il metodo useDispatch e useSelector */}\n\t\t\t\t\t{/*<button onClick={incrementHandler}>Increment</button>\n\t\t\t\t\t <button onClick={decrementHandler}>Decrement</button>*/}\n\n\t\t\t\t\t{/* Con il metodo connect */}\n\t\t\t\t\t<button onClick={this.incrementHandler.bind()}>Increment</button>\n\t\t\t\t\t<button onClick={this.decrementHandler.bind}>Decrement</button>\n\t\t\t\t</div>\n\t\t\t\t<button onClick={this.toggleCounterHandler}>Toggle Counter</button>\n\t\t\t</main>\n\t\t);\n\t};\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tcounter: state.counter\n\t}\n}\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tincrement: () => dispatch({type: 'increment'}),\n\t\tdecrement: () => dispatch({type: 'decrement'})\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter);\n"]},"metadata":{},"sourceType":"module"}