{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\"; //  COUNTER\n\nconst initialCounterState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  //  createSlice crea automaticamente action identifier per i differenti reducer\n  name: 'counter',\n  initialState: initialCounterState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n\n  }\n});\nexport default counterSlice;","map":{"version":3,"sources":["/Users/stefanovolpatti/Web Development/react-complete-guide/18-Redux/redux-project/src/store/counterSlice.js"],"names":["createSlice","initialCounterState","counter","showCounter","counterSlice","name","initialState","reducers","increment","state","decrement","increase","action","payload","toggleCounter"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,kBAA1B,C,CAEA;;AACA,MAAMC,mBAAmB,GAAG;AAACC,EAAAA,OAAO,EAAE,CAAV;AAAaC,EAAAA,WAAW,EAAE;AAA1B,CAA5B;AAEA,MAAMC,YAAY,GAAGJ,WAAW,CAAC;AAAG;AACnCK,EAAAA,IAAI,EAAE,SAD0B;AAEhCC,EAAAA,YAAY,EAAEL,mBAFkB;AAGhCM,EAAAA,QAAQ,EAAE;AACTC,IAAAA,SAAS,CAACC,KAAD,EAAQ;AAChBA,MAAAA,KAAK,CAACP,OAAN;AACA,KAHQ;;AAITQ,IAAAA,SAAS,CAACD,KAAD,EAAQ;AAChBA,MAAAA,KAAK,CAACP,OAAN;AACA,KANQ;;AAOTS,IAAAA,QAAQ,CAACF,KAAD,EAAQG,MAAR,EAAgB;AACvBH,MAAAA,KAAK,CAACP,OAAN,GAAgBO,KAAK,CAACP,OAAN,GAAgBU,MAAM,CAACC,OAAvC;AACA,KATQ;;AAUTC,IAAAA,aAAa,CAACL,KAAD,EAAQ;AACpBA,MAAAA,KAAK,CAACN,WAAN,GAAoB,CAACM,KAAK,CAACN,WAA3B;AACA;;AAZQ;AAHsB,CAAD,CAAhC;AAkBA,eAAeC,YAAf","sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\";\n\n//  COUNTER\nconst initialCounterState = {counter: 0, showCounter: true}\n\nconst counterSlice = createSlice({  //  createSlice crea automaticamente action identifier per i differenti reducer\n\tname: 'counter',\n\tinitialState: initialCounterState,\n\treducers: {\n\t\tincrement(state) {\n\t\t\tstate.counter++;\n\t\t},\n\t\tdecrement(state) {\n\t\t\tstate.counter--;\n\t\t},\n\t\tincrease(state, action) {\n\t\t\tstate.counter = state.counter + action.payload;\n\t\t},\n\t\ttoggleCounter(state) {\n\t\t\tstate.showCounter = !state.showCounter\n\t\t}\n\t}\n})\nexport default counterSlice;"]},"metadata":{},"sourceType":"module"}