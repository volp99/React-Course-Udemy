{"ast":null,"code":"import { configureStore, createSlice } from \"@reduxjs/toolkit\";\nconst initialCounterState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  //  createSlice crea automaticamente action identifier per i differenti reducer\n  name: 'counter',\n  initialState: initialCounterState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n\n  }\n});\nconst initialAuthState = {\n  isAuthenticated: false\n};\nconst authSlice = createSlice({\n  name: 'autenticatioh',\n  initialState: initialAuthState,\n  reducers: {\n    login(state) {\n      state.isAuthenticated = true;\n    },\n\n    logout(state) {\n      state.isAuthenticated = false;\n    }\n\n  }\n});\n/* STORE\n configueStore è come createStore con la differenza che posso gestire multipli reducer\n */\n\nconst store = configureStore({\n  reducer: counterSlice.reducer\n}); //  Esporto le actions, non c'è bisogno che le definica, react toolkit fa tutto da solo\n\nexport const counterActions = counterSlice.actions;\nexport default store;\n/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++/\n /*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++/\n /*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++/\n /*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++/\n /*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++/\n /*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++/\n\n */\n//  reducer senza react toolkit\n\n/*\n const counterReducer = (state = initialState, action) => {\n if (action.type === 'increment') {\n return {\n counter: state.counter + 1,\n showCounter: state.showCounter\n }\n }\n if (action.type === 'decrement') {\n return {\n counter: state.counter - 1,\n showCounter: state.showCounter\n }\n }\n if (action.type === 'increase') {\n return {\n counter: state.counter + action.amount, //  aggiungo un payload\n showCounter: state.showCounter\n }\n }\n if (action.type === 'toggle') {\n return {\n showCounter: !state.showCounter,\n counter: state.counter\n }\n }\n return state;\n } */","map":{"version":3,"sources":["/Users/stefanovolpatti/Web Development/react-complete-guide/18-Redux/redux-project/src/store/index.js"],"names":["configureStore","createSlice","initialCounterState","counter","showCounter","counterSlice","name","initialState","reducers","increment","state","decrement","increase","action","payload","toggleCounter","initialAuthState","isAuthenticated","authSlice","login","logout","store","reducer","counterActions","actions"],"mappings":"AAAA,SAAQA,cAAR,EAAwBC,WAAxB,QAA0C,kBAA1C;AAEA,MAAMC,mBAAmB,GAAG;AAACC,EAAAA,OAAO,EAAE,CAAV;AAAaC,EAAAA,WAAW,EAAE;AAA1B,CAA5B;AAEA,MAAMC,YAAY,GAAGJ,WAAW,CAAC;AAAG;AACnCK,EAAAA,IAAI,EAAE,SAD0B;AAEhCC,EAAAA,YAAY,EAAEL,mBAFkB;AAGhCM,EAAAA,QAAQ,EAAE;AACTC,IAAAA,SAAS,CAACC,KAAD,EAAQ;AAChBA,MAAAA,KAAK,CAACP,OAAN;AACA,KAHQ;;AAITQ,IAAAA,SAAS,CAACD,KAAD,EAAQ;AAChBA,MAAAA,KAAK,CAACP,OAAN;AACA,KANQ;;AAOTS,IAAAA,QAAQ,CAACF,KAAD,EAAQG,MAAR,EAAgB;AACvBH,MAAAA,KAAK,CAACP,OAAN,GAAgBO,KAAK,CAACP,OAAN,GAAgBU,MAAM,CAACC,OAAvC;AACA,KATQ;;AAUTC,IAAAA,aAAa,CAACL,KAAD,EAAQ;AACpBA,MAAAA,KAAK,CAACN,WAAN,GAAoB,CAACM,KAAK,CAACN,WAA3B;AACA;;AAZQ;AAHsB,CAAD,CAAhC;AAmBA,MAAMY,gBAAgB,GAAG;AAACC,EAAAA,eAAe,EAAE;AAAlB,CAAzB;AAEA,MAAMC,SAAS,GAAGjB,WAAW,CAAC;AAC7BK,EAAAA,IAAI,EAAE,eADuB;AAE7BC,EAAAA,YAAY,EAAES,gBAFe;AAG7BR,EAAAA,QAAQ,EAAE;AACTW,IAAAA,KAAK,CAACT,KAAD,EAAQ;AACZA,MAAAA,KAAK,CAACO,eAAN,GAAwB,IAAxB;AACA,KAHQ;;AAITG,IAAAA,MAAM,CAACV,KAAD,EAAQ;AACbA,MAAAA,KAAK,CAACO,eAAN,GAAwB,KAAxB;AACA;;AANQ;AAHmB,CAAD,CAA7B;AAaA;AACA;AACA;;AAEA,MACCI,KAAK,GAAGrB,cAAc,CAAC;AACtBsB,EAAAA,OAAO,EAAEjB,YAAY,CAACiB;AADA,CAAD,CADvB,C,CAKA;;AACA,OAAO,MAAMC,cAAc,GAAGlB,YAAY,CAACmB,OAApC;AAEP,eAAeH,KAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import {configureStore, createSlice} from \"@reduxjs/toolkit\";\n\nconst initialCounterState = {counter: 0, showCounter: true}\n\nconst counterSlice = createSlice({  //  createSlice crea automaticamente action identifier per i differenti reducer\n\tname: 'counter',\n\tinitialState: initialCounterState,\n\treducers: {\n\t\tincrement(state) {\n\t\t\tstate.counter++;\n\t\t},\n\t\tdecrement(state) {\n\t\t\tstate.counter--;\n\t\t},\n\t\tincrease(state, action) {\n\t\t\tstate.counter = state.counter + action.payload;\n\t\t},\n\t\ttoggleCounter(state) {\n\t\t\tstate.showCounter = !state.showCounter\n\t\t}\n\t}\n})\n\nconst initialAuthState = {isAuthenticated: false}\n\nconst authSlice = createSlice({\n\tname: 'autenticatioh',\n\tinitialState: initialAuthState,\n\treducers: {\n\t\tlogin(state) {\n\t\t\tstate.isAuthenticated = true\n\t\t},\n\t\tlogout(state) {\n\t\t\tstate.isAuthenticated = false\n\t\t}\n\t}\n})\n\n/* STORE\n configueStore è come createStore con la differenza che posso gestire multipli reducer\n */\n\nconst\n\tstore = configureStore({\n\t\treducer: counterSlice.reducer\n\t})\n\n//  Esporto le actions, non c'è bisogno che le definica, react toolkit fa tutto da solo\nexport const counterActions = counterSlice.actions;\n\nexport default store;\n\n/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++/\n /*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++/\n /*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++/\n /*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++/\n /*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++/\n /*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++/\n\n */\n//  reducer senza react toolkit\n/*\n const counterReducer = (state = initialState, action) => {\n if (action.type === 'increment') {\n return {\n counter: state.counter + 1,\n showCounter: state.showCounter\n }\n }\n if (action.type === 'decrement') {\n return {\n counter: state.counter - 1,\n showCounter: state.showCounter\n }\n }\n if (action.type === 'increase') {\n return {\n counter: state.counter + action.amount, //  aggiungo un payload\n showCounter: state.showCounter\n }\n }\n if (action.type === 'toggle') {\n return {\n showCounter: !state.showCounter,\n counter: state.counter\n }\n }\n return state;\n } */"]},"metadata":{},"sourceType":"module"}