{"ast":null,"code":"import { configureStore, createSlice } from \"@reduxjs/toolkit\"; // AUTHENTICATION\n\nconst initialAuthState = {\n  isAuthenticated: false\n};\nconst authSlice = createSlice({\n  name: 'authentication',\n  initialState: initialAuthState,\n  reducers: {\n    login(state) {\n      state.isAuthenticated = true;\n    },\n\n    logout(state) {\n      state.isAuthenticated = false;\n    }\n\n  }\n});\n/* STORE\n configueStore è come createStore con la differenza che posso gestire multipli reducer\n */\n\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n    auth: authSlice.reducer\n  }\n}); //  Esporto le actions, non c'è bisogno che le definica, react toolkit fa tutto da solo\n\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\nexport default store;\n/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++/\n\n */\n//  reducer senza react toolkit\n\n/*\n const counterReducer = (state = initialState, action) => {\n if (action.type === 'increment') {\n return {\n counter: state.counter + 1,\n showCounter: state.showCounter\n }\n }\n if (action.type === 'decrement') {\n return {\n counter: state.counter - 1,\n showCounter: state.showCounter\n }\n }\n if (action.type === 'increase') {\n return {\n counter: state.counter + action.amount, //  aggiungo un payload\n showCounter: state.showCounter\n }\n }\n if (action.type === 'toggle') {\n return {\n showCounter: !state.showCounter,\n counter: state.counter\n }\n }\n return state;\n } */","map":{"version":3,"sources":["/Users/stefanovolpatti/Web Development/react-complete-guide/18-Redux/redux-project/src/store/index.js"],"names":["configureStore","createSlice","initialAuthState","isAuthenticated","authSlice","name","initialState","reducers","login","state","logout","store","reducer","counter","counterSlice","auth","counterActions","actions","authActions"],"mappings":"AAAA,SAAQA,cAAR,EAAwBC,WAAxB,QAA0C,kBAA1C,C,CAEA;;AACA,MAAMC,gBAAgB,GAAG;AAACC,EAAAA,eAAe,EAAE;AAAlB,CAAzB;AACA,MAAMC,SAAS,GAAGH,WAAW,CAAC;AAC7BI,EAAAA,IAAI,EAAE,gBADuB;AAE7BC,EAAAA,YAAY,EAAEJ,gBAFe;AAG7BK,EAAAA,QAAQ,EAAE;AACTC,IAAAA,KAAK,CAACC,KAAD,EAAQ;AACZA,MAAAA,KAAK,CAACN,eAAN,GAAwB,IAAxB;AACA,KAHQ;;AAITO,IAAAA,MAAM,CAACD,KAAD,EAAQ;AACbA,MAAAA,KAAK,CAACN,eAAN,GAAwB,KAAxB;AACA;;AANQ;AAHmB,CAAD,CAA7B;AAaA;AACA;AACA;;AACA,MAAMQ,KAAK,GAAGX,cAAc,CAAC;AAC5BY,EAAAA,OAAO,EAAE;AAACC,IAAAA,OAAO,EAAEC,YAAY,CAACF,OAAvB;AAAgCG,IAAAA,IAAI,EAAEX,SAAS,CAACQ;AAAhD;AADmB,CAAD,CAA5B,C,CAIA;;AACA,OAAO,MAAMI,cAAc,GAAGF,YAAY,CAACG,OAApC;AACP,OAAO,MAAMC,WAAW,GAAGd,SAAS,CAACa,OAA9B;AAEP,eAAeN,KAAf;AAEA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import {configureStore, createSlice} from \"@reduxjs/toolkit\";\n\n// AUTHENTICATION\nconst initialAuthState = {isAuthenticated: false}\nconst authSlice = createSlice({\n\tname: 'authentication',\n\tinitialState: initialAuthState,\n\treducers: {\n\t\tlogin(state) {\n\t\t\tstate.isAuthenticated = true\n\t\t},\n\t\tlogout(state) {\n\t\t\tstate.isAuthenticated = false\n\t\t}\n\t}\n})\n\n/* STORE\n configueStore è come createStore con la differenza che posso gestire multipli reducer\n */\nconst store = configureStore({\n\treducer: {counter: counterSlice.reducer, auth: authSlice.reducer}\n})\n\n//  Esporto le actions, non c'è bisogno che le definica, react toolkit fa tutto da solo\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\n\nexport default store;\n\n/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++/\n\n */\n//  reducer senza react toolkit\n/*\n const counterReducer = (state = initialState, action) => {\n if (action.type === 'increment') {\n return {\n counter: state.counter + 1,\n showCounter: state.showCounter\n }\n }\n if (action.type === 'decrement') {\n return {\n counter: state.counter - 1,\n showCounter: state.showCounter\n }\n }\n if (action.type === 'increase') {\n return {\n counter: state.counter + action.amount, //  aggiungo un payload\n showCounter: state.showCounter\n }\n }\n if (action.type === 'toggle') {\n return {\n showCounter: !state.showCounter,\n counter: state.counter\n }\n }\n return state;\n } */"]},"metadata":{},"sourceType":"module"}