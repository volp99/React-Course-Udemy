{"version":3,"sources":["components/comments/Comments.module.css","components/comments/NewCommentForm.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/quotes/HighlightedQuote.module.css","components/comments/NewCommentForm.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/Comments.js","components/quotes/HighlightedQuote.js","pages/QuoteDetail.js"],"names":["module","exports","NewCommentForm","props","commentTextRef","useRef","useHttp","addComment","sendRequest","status","error","onAddedComment","useEffect","submitFormHandler","event","preventDefault","enteredText","current","value","commentData","text","quoteId","className","classes","form","onSubmit","LoadingSpinner","control","htmlFor","id","rows","ref","actions","CommentItem","item","CommentsList","comments","map","comment","Comments","useState","isAddingComment","setIsAddingComment","useParams","getAllComments","loadedComments","data","addedCommentHandler","useCallback","length","onClick","HighlightedQuote","quote","author","QuoteDetail","match","useRouteMatch","getSingleQuote","loadedQuote","path","exact","to","url"],"mappings":"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","file":"static/js/4.719941a9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__iZX-v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__2Te8b\",\"loading\":\"NewCommentForm_loading__2veC2\",\"control\":\"NewCommentForm_control__3NVeP\",\"actions\":\"NewCommentForm_actions__2fwWP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__24mbD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__valp0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__nE9T6\"};","import {useEffect, useRef} from 'react';\n\nimport useHttp from '../../hooks/use-http';\nimport {addComment} from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './NewCommentForm.module.css';\n\nconst NewCommentForm = (props) => {\n\tconst commentTextRef = useRef();\n\n\tconst {sendRequest, status, error} = useHttp(addComment);\n\n\tconst {onAddedComment} = props;\n\n\tuseEffect(() => {\n\t\tif (status === 'completed' && !error) {\n\t\t\tonAddedComment();\n\t\t}\n\t}, [status, error, onAddedComment]);\n\n\tconst submitFormHandler = (event) => {\n\t\tevent.preventDefault();\n\n\t\tconst enteredText = commentTextRef.current.value;\n\n\t\t// optional: Could validate here\n\n\t\tsendRequest({commentData: {text: enteredText}, quoteId: props.quoteId});\n\t};\n\n\treturn (\n\t\t<form className={classes.form} onSubmit={submitFormHandler}>\n\t\t\t{status === 'pending' && (\n\t\t\t\t<div className=\"centered\">\n\t\t\t\t\t<LoadingSpinner/>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t<div className={classes.control} onSubmit={submitFormHandler}>\n\t\t\t\t<label htmlFor=\"comment\">Your Comment</label>\n\t\t\t\t<textarea id=\"comment\" rows=\"5\" ref={commentTextRef}></textarea>\n\t\t\t</div>\n\t\t\t<div className={classes.actions}>\n\t\t\t\t<button className=\"btn\">Add Comment</button>\n\t\t\t</div>\n\t\t</form>\n\t);\n};\n\nexport default NewCommentForm;","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import {useCallback, useEffect, useState} from 'react';\nimport {useParams} from 'react-router-dom';\n\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport useHttp from '../../hooks/use-http';\nimport {getAllComments} from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport CommentsList from './CommentsList';\n\nconst Comments = () => {\n\tconst [isAddingComment, setIsAddingComment] = useState(false);\n\tconst params = useParams();\n\n\tconst {quoteId} = params;\n\n\tconst {sendRequest, status, data: loadedComments} = useHttp(getAllComments);\n\n\tuseEffect(() => {\n\t\tsendRequest(quoteId);\n\t}, [quoteId, sendRequest]);\n\n\tconst startAddCommentHandler = () => {\n\t\tsetIsAddingComment(true);\n\t};\n\n\tconst addedCommentHandler = useCallback(() => {\n\t\tsendRequest(quoteId);\n\t}, [sendRequest, quoteId]);\n\n\tlet comments;\n\n\tif (status === 'pending') {\n\t\tcomments = (\n\t\t\t<div className=\"centered\">\n\t\t\t\t<LoadingSpinner/>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tif (status === 'completed' && loadedComments && loadedComments.length > 0) {\n\t\tcomments = <CommentsList comments={loadedComments}/>;\n\t}\n\n\tif (\n\t\tstatus === 'completed' &&\n\t\t(!loadedComments || loadedComments.length === 0)\n\t) {\n\t\tcomments = <p className=\"centered\">No comments were added yet!</p>;\n\t}\n\n\treturn (\n\t\t<section className={classes.comments}>\n\t\t\t<h2>User Comments</h2>\n\t\t\t{!isAddingComment && (\n\t\t\t\t<button className=\"btn\" onClick={startAddCommentHandler}>\n\t\t\t\t\tAdd a Comment\n\t\t\t\t</button>\n\t\t\t)}\n\t\t\t{isAddingComment && (\n\t\t\t\t<NewCommentForm\n\t\t\t\t\tquoteId={quoteId}\n\t\t\t\t\tonAddedComment={addedCommentHandler}\n\t\t\t\t/>\n\t\t\t)}\n\t\t\t{comments}\n\t\t</section>\n\t);\n};\n\nexport default Comments;","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import {Link, Route, useParams, useRouteMatch} from \"react-router-dom\";\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport useHttp from \"../hooks/use-http\";\nimport {getSingleQuote} from \"../lib/api\";\nimport {useEffect} from \"react\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\n\nconst QuoteDetail = () => {\n\tconst match = useRouteMatch();\n\tconst params = useParams();\n\n\tconst {quoteId} = params;\n\n\tconst {sendRequest, status, data: loadedQuote, error} = useHttp(getSingleQuote, true)\n\n\tuseEffect(() => {\n\t\tsendRequest(quoteId)\n\t}, [sendRequest, quoteId])\n\n\tif (status === 'pending') {\n\t\treturn (\n\t\t\t<p className=\"centered\">\n\t\t\t\t<LoadingSpinner/>\n\t\t\t</p>\n\t\t)\n\t}\n\tif (error) {\n\t\treturn <p className=\"cnetered focused\">{error}</p>\n\t}\n\n\tif (!loadedQuote.text) {\n\t\treturn <p>No quote found</p>\n\t}\n\treturn (\n\t\t<>\n\t\t\t<HighlightedQuote text={loadedQuote.text} author={loadedQuote.author}/>\n\t\t\t<Route path={match.path} exact>\n\t\t\t\t<div className=\"centered\">\n\t\t\t\t\t<Link className=\"btn--flat\" to={`${match.url}/comments`}>Load Cooments</Link>\n\t\t\t\t</div>\n\t\t\t</Route>\n\t\t\t<Route path={`${match.path}/comments`}>\n\t\t\t\t<Comments/>\n\t\t\t</Route>\n\t\t</>\n\t)\n}\nexport default QuoteDetail;"],"sourceRoot":""}