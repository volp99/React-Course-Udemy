{"version":3,"sources":["components/quotes/QuoteItem.module.css","components/quotes/QuoteList.module.css","components/quotes/NoQuotesFound.module.css","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/quotes/NoQuotesFound.js","pages/AllQuotes.js"],"names":["module","exports","QuoteItem","props","className","classes","item","text","author","to","id","QuoteList","quotes","ascending","history","useHistory","location","useLocation","isSortingAscending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","sorting","onClick","push","pathname","list","map","quote","NoQuotesFound","noquotes","AllQuotes","useHttp","getAllQuotes","sendRequest","status","loadedQuotes","data","error","useEffect","LoadingSpinner","length"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,0B,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,6B,mBCA3DD,EAAOC,QAAU,CAAC,SAAW,kC,wFCkBdC,EAhBG,SAACC,GAClB,OACC,qBAAIC,UAAWC,IAAQC,KAAvB,UACC,mCACC,qCACC,4BAAIH,EAAMI,SAEX,qCAAaJ,EAAMK,YAEpB,cAAC,IAAD,CAAMJ,UAAU,MAAMK,GAAE,kBAAaN,EAAMO,IAA3C,iC,iBCsCYC,EAnCG,SAACR,GAClB,IAXmBS,EAAQC,EAWrBC,EAAUC,cACVC,EAAWC,cAIXC,EAAiD,QAFnC,IAAIC,gBAAgBH,EAASI,QAEVC,IAAI,QAErCC,GAlBaV,EAkBaT,EAAMS,OAlBXC,EAkBmBK,EAjBvCN,EAAOW,MAAK,SAACC,EAAQC,GAC3B,OAAIZ,EACIW,EAAOd,GAAKe,EAAOf,GAAK,GAAK,EAE7Bc,EAAOd,GAAKe,EAAOf,GAAK,GAAK,MAqBtC,OACC,eAAC,WAAD,WACC,qBAAKN,UAAWC,IAAQqB,QAAxB,SACC,yBAAQC,QATkB,WAC5Bb,EAAQc,KAAK,CACZC,SAAUb,EAASa,SACnBT,OAAO,SAAD,OAAYF,EAAqB,OAAS,UAM/C,kBAA6CA,EAAqB,aAAe,iBAElF,oBAAId,UAAWC,IAAQyB,KAAvB,SACER,EAAaS,KAAI,SAACC,GAAD,OACjB,cAAC,EAAD,CAECtB,GAAIsB,EAAMtB,GACVF,OAAQwB,EAAMxB,OACdD,KAAMyB,EAAMzB,MAHPyB,EAAMtB,a,yCCzBFuB,EAXO,WACrB,OACC,sBAAK7B,UAAWC,IAAQ6B,SAAxB,UACC,iDACA,cAAC,IAAD,CAAMzB,GAAG,aAAaL,UAAU,MAAhC,6BCyBY+B,UAzBG,WACjB,MAAyDC,YAAQC,KAAc,GAAxEC,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,OAAcC,EAAlC,EAA4BC,KAAoBC,EAAhD,EAAgDA,MAKhD,OAJAC,qBAAU,WACTL,MACE,CAACA,IAEW,YAAXC,EAEF,qBAAKnC,UAAU,WAAf,SACC,cAACwC,EAAA,EAAD,MAKCF,EACI,mBAAGtC,UAAU,mBAAb,SAAiCsC,IAE1B,cAAXH,GAA4BC,GAAwC,IAAxBA,EAAaK,OAK5D,cAAC,EAAD,CAAWjC,OAAQ4B,IAJZ,cAAC,EAAD","file":"static/js/5.4dc363f6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__2dOvb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__3pzcl\",\"sorting\":\"QuoteList_sorting__rL6H1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__3DIYb\"};","import classes from './QuoteItem.module.css';\nimport {Link} from \"react-router-dom\";\n\nconst QuoteItem = (props) => {\n\treturn (\n\t\t<li className={classes.item}>\n\t\t\t<figure>\n\t\t\t\t<blockquote>\n\t\t\t\t\t<p>{props.text}</p>\n\t\t\t\t</blockquote>\n\t\t\t\t<figcaption>{props.author}</figcaption>\n\t\t\t</figure>\n\t\t\t<Link className=\"btn\" to={`/quotes/${props.id}`}>\n\t\t\t\tView Fullscreen\n\t\t\t</Link>\n\t\t</li>\n\t);\n};\n\nexport default QuoteItem;\n","import {useHistory, useLocation} from \"react-router-dom\";\nimport {Fragment} from \"react\";\nimport QuoteItem from \"./QuoteItem\";\nimport classes from './QuoteList.module.css';\n\nconst sortQuotes = (quotes, ascending) => {\n\treturn quotes.sort((quoteA, quoteB) => {\n\t\tif (ascending) {\n\t\t\treturn quoteA.id > quoteB.id ? 1 : -1;\n\t\t} else {\n\t\t\treturn quoteA.id < quoteB.id ? 1 : -1;\n\t\t}\n\t});\n};\n\nconst QuoteList = (props) => {\n\tconst history = useHistory()\n\tconst location = useLocation()\n\n\tconst queryParams = new URLSearchParams(location.search)\n\n\tconst isSortingAscending = queryParams.get('sort') === 'asc';\n\n\tconst sortedQuotes = sortQuotes(props.quotes, isSortingAscending)\n\n\tconst ChangeSortingHandler = () => {\n\t\thistory.push({\n\t\t\tpathname: location.pathname,\n\t\t\tsearch: `?sort=${(isSortingAscending ? 'desc' : 'asc')}`\n\t\t})\n\t}\n\treturn (\n\t\t<Fragment>\n\t\t\t<div className={classes.sorting}>\n\t\t\t\t<button onClick={ChangeSortingHandler}>Sort {isSortingAscending ? 'Descending' : 'Ascending'}</button>\n\t\t\t</div>\n\t\t\t<ul className={classes.list}>\n\t\t\t\t{sortedQuotes.map((quote) => (\n\t\t\t\t\t<QuoteItem\n\t\t\t\t\t\tkey={quote.id}\n\t\t\t\t\t\tid={quote.id}\n\t\t\t\t\t\tauthor={quote.author}\n\t\t\t\t\t\ttext={quote.text}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t</Fragment>\n\t);\n};\n\nexport default QuoteList;\n","import classes from './NoQuotesFound.module.css';\nimport {Link} from 'react-router-dom';\n\nconst NoQuotesFound = () => {\n\treturn (\n\t\t<div className={classes.noquotes}>\n\t\t\t<p>No quotes found!</p>\n\t\t\t<Link to=\"/new-quote\" className='btn'>\n\t\t\t\tAdd a Quote\n\t\t\t</Link>\n\t\t</div>\n\t);\n};\n\nexport default NoQuotesFound;\n","import QuoteList from \"../components/quotes/QuoteList\";\nimport useHttp from \"../hooks/use-http\";\nimport {getAllQuotes} from \"../lib/api\";\nimport {useEffect} from \"react\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\n\nconst AllQuotes = () => {\n\tconst {sendRequest, status, data: loadedQuotes, error} = useHttp(getAllQuotes, true)\n\tuseEffect(() => {\n\t\tsendRequest()\n\t}, [sendRequest])\n\n\tif (status === 'pending') {\n\t\treturn (\n\t\t\t<div className=\"centered\">\n\t\t\t\t<LoadingSpinner/>\n\t\t\t</div>\n\t\t)\n\t}\n\n\tif (error) {\n\t\treturn <p className=\"cnetered focused\">{error}</p>\n\t}\n\tif (status === 'completed' && (!loadedQuotes || loadedQuotes.length === 0)) {\n\t\treturn <NoQuotesFound/>\n\t}\n\n\treturn (\n\t\t<QuoteList quotes={loadedQuotes}/>\n\t)\n}\nexport default AllQuotes;"],"sourceRoot":""}