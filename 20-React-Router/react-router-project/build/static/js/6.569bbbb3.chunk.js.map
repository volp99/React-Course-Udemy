{"version":3,"sources":["components/UI/Card.module.css","components/quotes/QuoteForm.module.css","components/UI/Card.js","components/quotes/QuoteForm.js","pages/NewQuotes.js"],"names":["module","exports","Card","props","className","classes","card","children","QuoteForm","useState","isEntering","setIsEntering","authorInputRef","useRef","textInputRef","when","message","location","onFocus","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","isLoading","loading","LoadingSpinner","control","htmlFor","type","id","ref","rows","actions","onClick","NewQuotes","useHttp","addQuote","sendRequest","status","history","useHistory","useEffect","push","quoteData"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,qB,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,2BAA2B,QAAU,2BAA2B,QAAU,6B,yFCKtHC,EAJF,SAACC,GACZ,OAAO,qBAAKC,UAAWC,IAAQC,KAAxB,SAA+BH,EAAMI,Y,yBCuD/BC,EApDG,SAACL,GAClB,MAAoCM,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACMC,EAAiBC,mBACjBC,EAAeD,mBAoBrB,OACC,eAAC,WAAD,WACC,cAAC,IAAD,CAAQE,KAAML,EACNM,QAAS,SAACC,GAAD,MAAc,yEAC/B,cAAC,EAAD,UACC,uBAAMC,QAZgB,WACxBP,GAAc,IAWqBP,UAAWC,IAAQc,KAAMC,SAvB7D,SAA2BC,GAC1BA,EAAMC,iBAEN,IAAMC,EAAgBX,EAAeY,QAAQC,MACvCC,EAAcZ,EAAaU,QAAQC,MAIzCtB,EAAMwB,WAAW,CAACC,OAAQL,EAAeM,KAAMH,KAe7C,UACEvB,EAAM2B,WACN,qBAAK1B,UAAWC,IAAQ0B,QAAxB,SACC,cAACC,EAAA,EAAD,MAIF,sBAAK5B,UAAWC,IAAQ4B,QAAxB,UACC,uBAAOC,QAAQ,SAAf,oBACA,uBAAOC,KAAK,OAAOC,GAAG,SAASC,IAAKzB,OAErC,sBAAKR,UAAWC,IAAQ4B,QAAxB,UACC,uBAAOC,QAAQ,OAAf,kBACA,0BAAUE,GAAG,OAAOE,KAAK,IAAID,IAAKvB,OAEnC,qBAAKV,UAAWC,IAAQkC,QAAxB,SACC,wBAAQC,QAzBiB,WAC7B7B,GAAc,IAwB8BP,UAAU,MAAlD,kC,gBC3BSqC,UAjBG,WACjB,MAA8BC,YAAQC,KAA/BC,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,OACdC,EAAUC,cAChBC,qBAAU,WACM,cAAXH,GACHC,EAAQG,KAAK,aAEZ,CAACJ,EAAQC,IAMZ,OACC,cAAC,EAAD,CAAWhB,UAAsB,YAAXe,EAAsBlB,WALrB,SAAAuB,GACvBN,EAAYM","file":"static/js/6.569bbbb3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1m44e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__3Ndw9\",\"loading\":\"QuoteForm_loading__iDpS0\",\"control\":\"QuoteForm_control__2lCiE\",\"actions\":\"QuoteForm_actions__354La\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import {Fragment, useRef, useState} from 'react';\nimport {Prompt} from \"react-router-dom\";\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = (props) => {\n\tconst [isEntering, setIsEntering] = useState(false)\n\tconst authorInputRef = useRef();\n\tconst textInputRef = useRef();\n\n\tfunction submitFormHandler(event) {\n\t\tevent.preventDefault();\n\n\t\tconst enteredAuthor = authorInputRef.current.value;\n\t\tconst enteredText = textInputRef.current.value;\n\n\t\t// optional: Could validate here\n\n\t\tprops.onAddQuote({author: enteredAuthor, text: enteredText});\n\t}\n\n\tconst formFocusHandler = () => {\n\t\tsetIsEntering(true)\n\t}\n\tconst finishEnteringHandler = () => {\n\t\tsetIsEntering(false)\n\t}\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<Prompt when={isEntering}\n\t\t\t        message={(location) => 'Are you sure you want to leave? All your entered data will be lost!'}/>\n\t\t\t<Card>\n\t\t\t\t<form onFocus={formFocusHandler} className={classes.form} onSubmit={submitFormHandler}>\n\t\t\t\t\t{props.isLoading && (\n\t\t\t\t\t\t<div className={classes.loading}>\n\t\t\t\t\t\t\t<LoadingSpinner/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\n\t\t\t\t\t<div className={classes.control}>\n\t\t\t\t\t\t<label htmlFor='author'>Author</label>\n\t\t\t\t\t\t<input type='text' id='author' ref={authorInputRef}/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={classes.control}>\n\t\t\t\t\t\t<label htmlFor='text'>Text</label>\n\t\t\t\t\t\t<textarea id='text' rows='5' ref={textInputRef}></textarea>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={classes.actions}>\n\t\t\t\t\t\t<button onClick={finishEnteringHandler} className='btn'>Add Quote</button>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</Card>\n\t\t</Fragment>\n\t);\n};\n\nexport default QuoteForm;\n","import {useHistory} from \"react-router-dom\";\nimport {useEffect} from 'react'\nimport QuoteForm from \"../components/quotes/QuoteForm\";\nimport useHttp from \"../hooks/use-http\";\nimport {addQuote} from \"../lib/api\";\n\nconst NewQuotes = () => {\n\tconst {sendRequest, status} = useHttp(addQuote);\n\tconst history = useHistory()\n\tuseEffect(() => {\n\t\tif (status === 'completed') {\n\t\t\thistory.push('/quotes')\n\t\t}\n\t}, [status, history])\n\n\tconst addQuoteHandler = quoteData => {\n\t\tsendRequest(quoteData)\n\t}\n\n\treturn (\n\t\t<QuoteForm isLoading={status === 'pending'} onAddQuote={addQuoteHandler}/>\n\t)\n}\nexport default NewQuotes;"],"sourceRoot":""}