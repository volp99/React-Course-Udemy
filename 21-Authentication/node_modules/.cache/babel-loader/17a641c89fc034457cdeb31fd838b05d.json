{"ast":null,"code":"var _jsxFileName = \"/Users/stefanovolpatti/Web Development/react-complete-guide/21-Authentication/src/store/auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet logoutTimer;\nconst AuthContext = /*#__PURE__*/React.createContext({\n  token: '',\n  isLoggedIn: false,\n  login: token => {},\n  logout: () => {}\n});\n\nconst calculateRemainingTime = expirationTime => {\n  const currentTime = new Date().getTime();\n  const adjExpirationTime = new Date(expirationTime).getTime();\n  const remainingDuration = adjExpirationTime - currentTime;\n  return remainingDuration;\n};\n\nconst retrieveStoredToken = () => {\n  const storedToken = localStorage.getItem('token');\n  const storedExpirationDate = localStorage.getItem('expirationTime');\n  const remainingTime = calculateRemainingTime(storedExpirationDate);\n\n  if (remainingTime <= 3600) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationTime');\n    return null;\n  }\n\n  return {\n    token: storedToken,\n    duration: remainingTime\n  };\n};\n\nexport const AuthContextProvider = props => {\n  _s();\n\n  const tokenData = retrieveStoredToken();\n  let initialToken;\n\n  if (tokenData) {\n    initialToken = tokenData.token;\n  }\n\n  const [token, setToken] = useState(initialToken);\n  const userIsLoggedIn = !!token;\n  const logoutHandler = useCallback(() => {\n    setToken(null);\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationTime');\n\n    if (logoutTimer) {\n      clearTimeout(logoutTimer);\n    }\n  }, []);\n\n  const loginHandler = (token, expirationTime) => {\n    setToken(token);\n    localStorage.setItem('token', token);\n    localStorage.setItem('expirationTime', expirationTime);\n    const remainingTime = calculateRemainingTime(expirationTime);\n    logoutTimer = setTimeout(logoutHandler, remainingTime);\n  };\n\n  useEffect(() => {\n    if (tokenData) {\n      console.log(tokenData.duration);\n      logoutTimer = setTimeout(logoutHandler, tokenData.duration);\n    }\n  }, [tokenData, logoutHandler]);\n  const contextValue = {\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 3\n  }, this);\n};\n\n_s(AuthContextProvider, \"Lh1CfGbFk5nTLZoGW/pEiX6CFRc=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["/Users/stefanovolpatti/Web Development/react-complete-guide/21-Authentication/src/store/auth-context.js"],"names":["React","useCallback","useEffect","useState","logoutTimer","AuthContext","createContext","token","isLoggedIn","login","logout","calculateRemainingTime","expirationTime","currentTime","Date","getTime","adjExpirationTime","remainingDuration","retrieveStoredToken","storedToken","localStorage","getItem","storedExpirationDate","remainingTime","removeItem","duration","AuthContextProvider","props","tokenData","initialToken","setToken","userIsLoggedIn","logoutHandler","clearTimeout","loginHandler","setItem","setTimeout","console","log","contextValue","children"],"mappings":"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","sourcesContent":["import React, {useCallback, useEffect, useState} from 'react';\n\nlet logoutTimer;\n\nconst AuthContext = React.createContext({\n\ttoken: '',\n\tisLoggedIn: false,\n\tlogin: (token) => {\n\t},\n\tlogout: () => {\n\t},\n});\n\nconst calculateRemainingTime = (expirationTime) => {\n\tconst currentTime = new Date().getTime();\n\tconst adjExpirationTime = new Date(expirationTime).getTime();\n\n\tconst remainingDuration = adjExpirationTime - currentTime;\n\n\treturn remainingDuration;\n};\n\nconst retrieveStoredToken = () => {\n\tconst storedToken = localStorage.getItem('token');\n\tconst storedExpirationDate = localStorage.getItem('expirationTime');\n\n\tconst remainingTime = calculateRemainingTime(storedExpirationDate);\n\n\tif (remainingTime <= 3600) {\n\t\tlocalStorage.removeItem('token');\n\t\tlocalStorage.removeItem('expirationTime');\n\t\treturn null;\n\t}\n\n\treturn {\n\t\ttoken: storedToken,\n\t\tduration: remainingTime,\n\t};\n};\n\nexport const AuthContextProvider = (props) => {\n\tconst tokenData = retrieveStoredToken();\n\n\tlet initialToken;\n\tif (tokenData) {\n\t\tinitialToken = tokenData.token;\n\t}\n\n\tconst [token, setToken] = useState(initialToken);\n\n\tconst userIsLoggedIn = !!token;\n\n\tconst logoutHandler = useCallback(() => {\n\t\tsetToken(null);\n\t\tlocalStorage.removeItem('token');\n\t\tlocalStorage.removeItem('expirationTime');\n\n\t\tif (logoutTimer) {\n\t\t\tclearTimeout(logoutTimer);\n\t\t}\n\t}, []);\n\n\tconst loginHandler = (token, expirationTime) => {\n\t\tsetToken(token);\n\t\tlocalStorage.setItem('token', token);\n\t\tlocalStorage.setItem('expirationTime', expirationTime);\n\n\t\tconst remainingTime = calculateRemainingTime(expirationTime);\n\n\t\tlogoutTimer = setTimeout(logoutHandler, remainingTime);\n\t};\n\n\tuseEffect(() => {\n\t\tif (tokenData) {\n\t\t\tconsole.log(tokenData.duration);\n\t\t\tlogoutTimer = setTimeout(logoutHandler, tokenData.duration);\n\t\t}\n\t}, [tokenData, logoutHandler]);\n\n\tconst contextValue = {\n\t\ttoken: token,\n\t\tisLoggedIn: userIsLoggedIn,\n\t\tlogin: loginHandler,\n\t\tlogout: logoutHandler,\n\t};\n\n\treturn (\n\t\t<AuthContext.Provider value={contextValue}>\n\t\t\t{props.children}\n\t\t</AuthContext.Provider>\n\t);\n};\n\nexport default AuthContext;"]},"metadata":{},"sourceType":"module"}