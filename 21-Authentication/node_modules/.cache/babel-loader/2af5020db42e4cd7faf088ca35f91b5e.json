{"ast":null,"code":"var _jsxFileName = \"/Users/stefanovolpatti/Web Development/react-complete-guide/21-Authentication/src/components/Auth/AuthForm.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useRef, useState } from 'react';\nimport AuthContext from '../../store/auth-context';\nimport classes from './AuthForm.module.css';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthForm = () => {\n  _s();\n\n  const history = useHistory();\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const authCtx = useContext(AuthContext);\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin(prevState => !prevState);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value; // optional: Add validation\n\n    setIsLoading(true);\n    let url;\n\n    if (isLogin) {\n      url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBI3_Up8MqsOhluC2I3Bj5aBxprtwaeLcs';\n    } else {\n      url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBI3_Up8MqsOhluC2I3Bj5aBxprtwaeLcs';\n    }\n\n    fetch(url, {\n      method: 'POST',\n      body: JSON.stringify({\n        email: enteredEmail,\n        password: enteredPassword,\n        returnSecureToken: true\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      setIsLoading(false);\n\n      if (res.ok) {\n        return res.json();\n      } else {\n        return res.json().then(data => {\n          let errorMessage = 'Authentication failed!';\n          /*\t\tif (data && data.error && data.error.message) {\n           errorMessage = data.error.message;\n           }*/\n\n          throw new Error(errorMessage);\n        });\n      }\n    }).then(data => {\n      const expirationTime = new Date(new Date().getTime() + +data.expireIn * 1000);\n      authCtx.login(data.idToken);\n      history.replace('/');\n    }).catch(err => {\n      alert(err.message);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? 'Login' : 'Sign Up'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          required: true,\n          ref: emailInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          required: true,\n          ref: passwordInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [!isLoading && /*#__PURE__*/_jsxDEV(\"button\", {\n          children: isLogin ? 'Login' : 'Create Account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Sending request...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: classes.toggle,\n          onClick: switchAuthModeHandler,\n          children: isLogin ? 'Create new account' : 'Login with existing account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 3\n  }, this);\n};\n\n_s(AuthForm, \"V9mgLlHICzGobfscsxv8TBwG27I=\", false, function () {\n  return [useHistory];\n});\n\n_c = AuthForm;\nexport default AuthForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"sources":["/Users/stefanovolpatti/Web Development/react-complete-guide/21-Authentication/src/components/Auth/AuthForm.js"],"names":["useContext","useRef","useState","AuthContext","classes","useHistory","AuthForm","history","emailInputRef","passwordInputRef","authCtx","isLogin","setIsLogin","isLoading","setIsLoading","switchAuthModeHandler","prevState","submitHandler","event","preventDefault","enteredEmail","current","value","enteredPassword","url","fetch","method","body","JSON","stringify","email","password","returnSecureToken","headers","then","res","ok","json","data","errorMessage","Error","expirationTime","Date","getTime","expireIn","login","idToken","replace","catch","err","alert","message","auth","control","actions","toggle"],"mappings":"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","sourcesContent":["import {useContext, useRef, useState} from 'react';\nimport AuthContext from '../../store/auth-context';\nimport classes from './AuthForm.module.css';\nimport {useHistory} from 'react-router-dom';\n\nconst AuthForm = () => {\n\tconst history = useHistory();\n\tconst emailInputRef = useRef();\n\tconst passwordInputRef = useRef();\n\n\tconst authCtx = useContext(AuthContext)\n\n\tconst [isLogin, setIsLogin] = useState(true);\n\tconst [isLoading, setIsLoading] = useState(false);\n\n\tconst switchAuthModeHandler = () => {\n\t\tsetIsLogin((prevState) => !prevState);\n\t};\n\n\tconst submitHandler = (event) => {\n\t\tevent.preventDefault();\n\n\t\tconst enteredEmail = emailInputRef.current.value;\n\t\tconst enteredPassword = passwordInputRef.current.value;\n\n\t\t// optional: Add validation\n\t\tsetIsLoading(true)\n\t\tlet url;\n\t\tif (isLogin) {\n\t\t\turl = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBI3_Up8MqsOhluC2I3Bj5aBxprtwaeLcs'\n\t\t} else {\n\t\t\turl = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBI3_Up8MqsOhluC2I3Bj5aBxprtwaeLcs'\n\t\t}\n\t\tfetch(url,\n\t\t\t{\n\t\t\t\tmethod: 'POST',\n\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\temail: enteredEmail,\n\t\t\t\t\tpassword: enteredPassword,\n\t\t\t\t\treturnSecureToken: true,\n\t\t\t\t}),\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t},\n\t\t\t},\n\t\t).then((res) => {\n\t\t\tsetIsLoading(false)\n\t\t\tif (res.ok) {\n\t\t\t\treturn res.json();\n\t\t\t} else {\n\t\t\t\treturn res.json().then((data) => {\n\t\t\t\t\tlet errorMessage = 'Authentication failed!'\n\t\t\t\t\t/*\t\tif (data && data.error && data.error.message) {\n\t\t\t\t\t errorMessage = data.error.message;\n\t\t\t\t\t }*/\n\t\t\t\t\tthrow new Error(errorMessage)\n\t\t\t\t});\n\t\t\t}\n\t\t})\n\t\t\t.then((data) => {\n\t\t\t\tconst expirationTime = new Date((new Date().getTime() + (+data.expireIn * 1000)))\n\t\t\t\tauthCtx.login(data.idToken);\n\t\t\t\thistory.replace('/')\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\talert(err.message)\n\t\t\t})\n\t};\n\n\treturn (\n\t\t<section className={classes.auth}>\n\t\t\t<h1>{isLogin ? 'Login' : 'Sign Up'}</h1>\n\t\t\t<form onSubmit={submitHandler}>\n\t\t\t\t<div className={classes.control}>\n\t\t\t\t\t<label htmlFor=\"email\">Your Email</label>\n\t\t\t\t\t<input type=\"email\" id=\"email\" required ref={emailInputRef}/>\n\t\t\t\t</div>\n\t\t\t\t<div className={classes.control}>\n\t\t\t\t\t<label htmlFor=\"password\">Your Password</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tref={passwordInputRef}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className={classes.actions}>\n\t\t\t\t\t{!isLoading && <button>{isLogin ? 'Login' : 'Create Account'}</button>}\n\t\t\t\t\t{isLoading && <p>Sending request...</p>}\n\t\t\t\t\t<button\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\tclassName={classes.toggle}\n\t\t\t\t\t\tonClick={switchAuthModeHandler}\n\t\t\t\t\t>\n\t\t\t\t\t\t{isLogin ? 'Create new account' : 'Login with existing account'}\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</section>\n\t);\n};\n\nexport default AuthForm;"]},"metadata":{},"sourceType":"module"}