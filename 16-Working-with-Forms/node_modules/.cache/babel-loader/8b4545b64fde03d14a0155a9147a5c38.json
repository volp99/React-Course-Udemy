{"ast":null,"code":"var _jsxFileName = \"/Users/stefanovolpatti/Web Development/react-complete-guide/16-Working-with-Forms/src/components/BasicForm.js\",\n    _s = $RefreshSig$();\n\nimport useInput from \"../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isNotEmpty = value => value.trim() !== '';\n\nconst isEmail = value => value.includes('@');\n\nconst BasicForm = props => {\n  _s();\n\n  // First name\n  const {\n    value: firstNameValue,\n    isValid: firstNameIsValid,\n    hasError: firstNameHasError,\n    valueChangeHandler: firstNameChangeHandler,\n    inputBlurHandler: firstNameBlurHandler,\n    reset: resetFirstName\n  } = useInput(isNotEmpty); // Last name\n\n  const {\n    value: lastNameValue,\n    isValid: lastNameIsValid,\n    hasError: lastNameHasError,\n    valueChangeHandler: lastNameChangeHandler,\n    inputBlurHandler: lastNameBlurHandler,\n    reset: resetLastName\n  } = useInput(isNotEmpty); //  Email address\n\n  const {\n    value: emailValue,\n    isValid: emailIsValid,\n    hasError: emailHasError,\n    valueChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: resetEmail\n  } = useInput(isEmail);\n  let formIsValid = false; // inizialmente a false\n\n  if (firstNameIsValid && lastNameIsValid && emailIsValid) {\n    //  se i 3 input sono validi allora swith a true\n    formIsValid = true;\n  }\n\n  const submitHanler = e => {\n    e.preventDefault();\n\n    if (!formIsValid) {\n      return;\n    }\n\n    console.log('submit');\n    console.log(firstNameValue, lastNameValue, emailValue); // Resetta i campi di testo una volta inviato il form\n\n    resetFirstName();\n    resetLastName();\n    resetEmail();\n  }; // Stili dinamici per i campi di testo in base alla condizione\n\n\n  const firstNameClasses = firstNameHasError ? 'form-control invalid' : 'form-control';\n  const lastNameClasses = lastNameHasError ? 'form-control invalid' : 'form-control';\n  const emailClasses = emailHasError ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHanler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: firstNameClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          value: firstNameValue,\n          onChange: firstNameChangeHandler,\n          onBlur: firstNameBlurHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 6\n        }, this), firstNameHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"Please enter a name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: lastNameClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          value: lastNameValue,\n          onChange: lastNameChangeHandler,\n          onBlur: lastNameBlurHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 6\n        }, this), lastNameHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"Please enter a last name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"E-Mail Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        value: emailValue,\n        onChange: emailChangeHandler,\n        onBlur: emailBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 4\n    }, this), emailHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \"Please enter a valid email address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 3\n  }, this);\n};\n\n_s(BasicForm, \"dd//pHlQjk14EgC4dlHF8VK6CdQ=\", false, function () {\n  return [useInput, useInput, useInput];\n});\n\n_c = BasicForm;\nexport default BasicForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicForm\");","map":{"version":3,"sources":["/Users/stefanovolpatti/Web Development/react-complete-guide/16-Working-with-Forms/src/components/BasicForm.js"],"names":["useInput","isNotEmpty","value","trim","isEmail","includes","BasicForm","props","firstNameValue","isValid","firstNameIsValid","hasError","firstNameHasError","valueChangeHandler","firstNameChangeHandler","inputBlurHandler","firstNameBlurHandler","reset","resetFirstName","lastNameValue","lastNameIsValid","lastNameHasError","lastNameChangeHandler","lastNameBlurHandler","resetLastName","emailValue","emailIsValid","emailHasError","emailChangeHandler","emailBlurHandler","resetEmail","formIsValid","submitHanler","e","preventDefault","console","log","firstNameClasses","lastNameClasses","emailClasses"],"mappings":"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","sourcesContent":["import useInput from \"../hooks/use-input\";\n\nconst isNotEmpty = value => value.trim() !== ''\nconst isEmail = value => value.includes('@')\n\nconst BasicForm = (props) => {\n\n\t// First name\n\tconst {\n\t\tvalue: firstNameValue,\n\t\tisValid: firstNameIsValid,\n\t\thasError: firstNameHasError,\n\t\tvalueChangeHandler: firstNameChangeHandler,\n\t\tinputBlurHandler: firstNameBlurHandler,\n\t\treset: resetFirstName\n\n\t} = useInput(isNotEmpty)\n\n\t// Last name\n\tconst {\n\t\tvalue: lastNameValue,\n\t\tisValid: lastNameIsValid,\n\t\thasError: lastNameHasError,\n\t\tvalueChangeHandler: lastNameChangeHandler,\n\t\tinputBlurHandler: lastNameBlurHandler,\n\t\treset: resetLastName\n\t} = useInput(isNotEmpty)\n\n\t//  Email address\n\tconst {\n\t\tvalue: emailValue,\n\t\tisValid: emailIsValid,\n\t\thasError: emailHasError,\n\t\tvalueChangeHandler: emailChangeHandler,\n\t\tinputBlurHandler: emailBlurHandler,\n\t\treset: resetEmail\n\t} = useInput(isEmail)\n\n\tlet formIsValid = false // inizialmente a false\n\tif (firstNameIsValid && lastNameIsValid && emailIsValid) {  //  se i 3 input sono validi allora swith a true\n\t\tformIsValid = true\n\t}\n\n\tconst submitHanler = e => {\n\t\te.preventDefault()\n\n\t\tif (!formIsValid) {\n\t\t\treturn;\n\t\t}\n\t\tconsole.log('submit')\n\t\tconsole.log(firstNameValue, lastNameValue, emailValue)\n\n\t\t// Resetta i campi di testo una volta inviato il form\n\t\tresetFirstName()\n\t\tresetLastName()\n\t\tresetEmail()\n\t}\n\n\t// Stili dinamici per i campi di testo in base alla condizione\n\tconst firstNameClasses = firstNameHasError ? 'form-control invalid' : 'form-control'\n\tconst lastNameClasses = lastNameHasError ? 'form-control invalid' : 'form-control'\n\tconst emailClasses = emailHasError ? 'form-control invalid' : 'form-control'\n\n\treturn (\n\t\t<form onSubmit={submitHanler}>\n\t\t\t<div className='control-group'>\n\t\t\t\t<div className={firstNameClasses}>\n\t\t\t\t\t<label htmlFor='name'>First Name</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tid='name'\n\t\t\t\t\t\tvalue={firstNameValue}\n\t\t\t\t\t\tonChange={firstNameChangeHandler}\n\t\t\t\t\t\tonBlur={firstNameBlurHandler}\n\t\t\t\t\t/>\n\t\t\t\t\t{firstNameHasError && <p className='error-text'>Please enter a name</p>}\n\t\t\t\t</div>\n\t\t\t\t<div className={lastNameClasses}>\n\t\t\t\t\t<label htmlFor='name'>Last Name</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tid='name'\n\t\t\t\t\t\tvalue={lastNameValue}\n\t\t\t\t\t\tonChange={lastNameChangeHandler}\n\t\t\t\t\t\tonBlur={lastNameBlurHandler}\n\t\t\t\t\t/>\n\t\t\t\t\t{lastNameHasError && <p className='error-text'>Please enter a last name</p>}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className={emailClasses}>\n\t\t\t\t<label htmlFor='name'>E-Mail Address</label>\n\t\t\t\t<input\n\t\t\t\t\ttype='text'\n\t\t\t\t\tid='name'\n\t\t\t\t\tvalue={emailValue}\n\t\t\t\t\tonChange={emailChangeHandler}\n\t\t\t\t\tonBlur={emailBlurHandler}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t{emailHasError && <p className='error-text'>Please enter a valid email address</p>}\n\t\t\t<div className='form-actions'>\n\t\t\t\t<button disabled={!formIsValid}>Submit</button>\n\t\t\t</div>\n\t\t</form>\n\t);\n};\nexport default BasicForm;\n"]},"metadata":{},"sourceType":"module"}