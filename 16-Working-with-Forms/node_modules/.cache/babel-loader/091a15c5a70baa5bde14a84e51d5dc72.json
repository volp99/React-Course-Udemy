{"ast":null,"code":"var _jsxFileName = \"/Users/stefanovolpatti/Web Development/react-complete-guide/16-Working-with-Forms/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport useInput from \"../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  // Name Input\n  const {\n    value: enteredName,\n    isValid: enteredNameIsValid,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangeHandler,\n    inputBlurHandler: nameBlurHandler,\n    reset: resetNameInput\n  } = useInput(value => value.trim() !== '');\n  const nameInputClasses = nameInputHasError ? 'form-control invalid' : 'form-control'; // Email Input\n\n  const {\n    value: enteredEmail,\n    isValid: enteredEmailIsValid,\n    hasError: emailInputHasError,\n    valueChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: resetEmailInput\n  } = useInput(value => value.includes('@'));\n  const emailInputClasses = emailInputHasError ? 'form-control invalid' : 'form-control';\n  let formIsValid = false;\n\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  const formSubmissionHandler = e => {\n    e.preventDefault();\n\n    if (!enteredNameIsValid) {\n      return;\n    }\n\n    resetNameInput();\n    resetEmailInput();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameChangeHandler,\n        onBlur: nameBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), nameInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your E-Mail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        onChange: emailChangeHandler,\n        onBlur: emailBlurHandler,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), emailInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Please enter a valid email.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SimpleInput, \"XfV61XgGrsDVxvqHqz7UsuxtHiY=\", false, function () {\n  return [useInput, useInput];\n});\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["/Users/stefanovolpatti/Web Development/react-complete-guide/16-Working-with-Forms/src/components/SimpleInput.js"],"names":["useInput","SimpleInput","props","value","enteredName","isValid","enteredNameIsValid","hasError","nameInputHasError","valueChangeHandler","nameChangeHandler","inputBlurHandler","nameBlurHandler","reset","resetNameInput","trim","nameInputClasses","enteredEmail","enteredEmailIsValid","emailInputHasError","emailChangeHandler","emailBlurHandler","resetEmailInput","includes","emailInputClasses","formIsValid","formSubmissionHandler","e","preventDefault"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,oBAArB;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAE3B;AACA,QAAM;AACFC,IAAAA,KAAK,EAAEC,WADL;AAEFC,IAAAA,OAAO,EAAEC,kBAFP;AAGFC,IAAAA,QAAQ,EAAEC,iBAHR;AAIFC,IAAAA,kBAAkB,EAAEC,iBAJlB;AAKFC,IAAAA,gBAAgB,EAAEC,eALhB;AAMFC,IAAAA,KAAK,EAAEC;AANL,MAOFd,QAAQ,CAACG,KAAK,IAAIA,KAAK,CAACY,IAAN,OAAiB,EAA3B,CAPZ;AASA,QAAMC,gBAAgB,GAAGR,iBAAiB,GAAG,sBAAH,GAA4B,cAAtE,CAZ2B,CAc3B;;AACA,QAAM;AACFL,IAAAA,KAAK,EAAEc,YADL;AAEFZ,IAAAA,OAAO,EAAEa,mBAFP;AAGFX,IAAAA,QAAQ,EAAEY,kBAHR;AAIFV,IAAAA,kBAAkB,EAAEW,kBAJlB;AAKFT,IAAAA,gBAAgB,EAAEU,gBALhB;AAMFR,IAAAA,KAAK,EAAES;AANL,MAOFtB,QAAQ,CAACG,KAAK,IAAIA,KAAK,CAACoB,QAAN,CAAe,GAAf,CAAV,CAPZ;AASA,QAAMC,iBAAiB,GAAGL,kBAAkB,GAAG,sBAAH,GAA4B,cAAxE;AAGA,MAAIM,WAAW,GAAG,KAAlB;;AACA,MAAInB,kBAAkB,IAAIY,mBAA1B,EAA+C;AAC3CO,IAAAA,WAAW,GAAG,IAAd;AACH;;AAGD,QAAMC,qBAAqB,GAAGC,CAAC,IAAI;AAC/BA,IAAAA,CAAC,CAACC,cAAF;;AAEA,QAAI,CAACtB,kBAAL,EAAyB;AACrB;AACH;;AAEDQ,IAAAA,cAAc;AACdQ,IAAAA,eAAe;AAClB,GATD;;AAYA,sBACI;AAAM,IAAA,QAAQ,EAAEI,qBAAhB;AAAA,4BACI;AAAK,MAAA,SAAS,EAAEV,gBAAhB;AAAA,8BACI;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,EAAE,EAAC,MAFP;AAGI,QAAA,QAAQ,EAAEN,iBAHd;AAII,QAAA,MAAM,EAAEE,eAJZ;AAKI,QAAA,KAAK,EAAER;AALX;AAAA;AAAA;AAAA;AAAA,cAFJ,EASKI,iBAAiB,iBACd;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVR;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAcI;AAAK,MAAA,SAAS,EAAEgB,iBAAhB;AAAA,8BACI;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AACI,QAAA,IAAI,EAAC,OADT;AAEI,QAAA,EAAE,EAAC,OAFP;AAGI,QAAA,QAAQ,EAAEJ,kBAHd;AAII,QAAA,MAAM,EAAEC,gBAJZ;AAKI,QAAA,KAAK,EAAEJ;AALX;AAAA;AAAA;AAAA;AAAA,cAFJ,EASKE,kBAAkB,iBACf;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVR;AAAA;AAAA;AAAA;AAAA;AAAA,YAdJ,eA2BI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACI;AAAQ,QAAA,QAAQ,EAAE,CAACM,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YA3BJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiCH,CA9ED;;GAAMxB,W;UAUED,Q,EAYAA,Q;;;KAtBFC,W;AAgFN,eAAeA,WAAf","sourcesContent":["import useInput from \"../hooks/use-input\";\n\nconst SimpleInput = (props) => {\n\n    // Name Input\n    const {\n        value: enteredName,\n        isValid: enteredNameIsValid,\n        hasError: nameInputHasError,\n        valueChangeHandler: nameChangeHandler,\n        inputBlurHandler: nameBlurHandler,\n        reset: resetNameInput\n    } = useInput(value => value.trim() !== '');\n\n    const nameInputClasses = nameInputHasError ? 'form-control invalid' : 'form-control';\n\n    // Email Input\n    const {\n        value: enteredEmail,\n        isValid: enteredEmailIsValid,\n        hasError: emailInputHasError,\n        valueChangeHandler: emailChangeHandler,\n        inputBlurHandler: emailBlurHandler,\n        reset: resetEmailInput\n    } = useInput(value => value.includes('@'));\n\n    const emailInputClasses = emailInputHasError ? 'form-control invalid' : 'form-control';\n\n\n    let formIsValid = false;\n    if (enteredNameIsValid && enteredEmailIsValid) {\n        formIsValid = true;\n    }\n\n\n    const formSubmissionHandler = e => {\n        e.preventDefault();\n        \n        if (!enteredNameIsValid) {\n            return;\n        }\n\n        resetNameInput()\n        resetEmailInput()\n    };\n\n\n    return (\n        <form onSubmit={formSubmissionHandler}>\n            <div className={nameInputClasses}>\n                <label htmlFor='name'>Your Name</label>\n                <input\n                    type='text'\n                    id='name'\n                    onChange={nameChangeHandler}\n                    onBlur={nameBlurHandler}\n                    value={enteredName}\n                />\n                {nameInputHasError && (\n                    <p className='error-text'>Name must not be empty.</p>\n                )}\n            </div>\n            <div className={emailInputClasses}>\n                <label htmlFor='email'>Your E-Mail</label>\n                <input\n                    type='email'\n                    id='email'\n                    onChange={emailChangeHandler}\n                    onBlur={emailBlurHandler}\n                    value={enteredEmail}\n                />\n                {emailInputHasError && (\n                    <p className='error-text'>Please enter a valid email.</p>\n                )}\n            </div>\n            <div className='form-actions'>\n                <button disabled={!formIsValid}>Submit</button>\n            </div>\n        </form>\n    );\n};\n\nexport default SimpleInput;"]},"metadata":{},"sourceType":"module"}