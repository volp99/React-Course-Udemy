{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useReducer } from 'react';\nconst initialInputState = {\n  value: '',\n  isTouched: false\n};\n\nconst inputStateReducer = (state, action) => {\n  if (action.type === 'INPUT') {\n    return {\n      value: action.value,\n      isTouched: state.isTouched\n    };\n  }\n\n  if (action.type === 'BLUR') {\n    return {\n      isTouched: true,\n      value: state.value\n    };\n  }\n\n  if (action.type === 'RESET') {\n    return {\n      isTouched: false,\n      value: ''\n    };\n  }\n\n  return inputStateReducer;\n};\n\nconst useInput = validateValue => {\n  _s();\n\n  const [inputState, dispatch] = useReducer(inputStateReducer, initialInputState);\n  const valueIsValid = validateValue(inputState.value);\n  const hasError = !valueIsValid && inputState.isTouched;\n\n  const valueChangeHandler = e => {\n    dispatch({\n      type: 'INPUT',\n      value: e.target.value\n    });\n  };\n\n  const inputBlurHandler = e => {\n    dispatch({\n      type: 'BLUR'\n    });\n  };\n\n  const reset = () => {\n    dispatch({\n      type: 'RESET'\n    });\n  };\n\n  return {\n    value: inputState.value,\n    isValid: valueIsValid,\n    hasError,\n    valueChangeHandler,\n    inputBlurHandler,\n    reset\n  };\n};\n\n_s(useInput, \"gvJkPEQ6Ju5turm8Oo71bK8W7Zk=\");\n\nexport default useInput;","map":{"version":3,"sources":["/Users/stefanovolpatti/Web Development/react-complete-guide/16-Working-with-Forms/src/hooks/use-input.js"],"names":["useReducer","initialInputState","value","isTouched","inputStateReducer","state","action","type","useInput","validateValue","inputState","dispatch","valueIsValid","hasError","valueChangeHandler","e","target","inputBlurHandler","reset","isValid"],"mappings":";;AAAA,SAAQA,UAAR,QAAyB,OAAzB;AAEA,MAAMC,iBAAiB,GAAG;AACzBC,EAAAA,KAAK,EAAE,EADkB;AAEzBC,EAAAA,SAAS,EAAE;AAFc,CAA1B;;AAKA,MAAMC,iBAAiB,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC5C,MAAIA,MAAM,CAACC,IAAP,KAAgB,OAApB,EAA6B;AAC5B,WAAO;AAACL,MAAAA,KAAK,EAAEI,MAAM,CAACJ,KAAf;AAAsBC,MAAAA,SAAS,EAAEE,KAAK,CAACF;AAAvC,KAAP;AACA;;AACD,MAAIG,MAAM,CAACC,IAAP,KAAgB,MAApB,EAA4B;AAC3B,WAAO;AAACJ,MAAAA,SAAS,EAAE,IAAZ;AAAkBD,MAAAA,KAAK,EAAEG,KAAK,CAACH;AAA/B,KAAP;AACA;;AACD,MAAII,MAAM,CAACC,IAAP,KAAgB,OAApB,EAA6B;AAC5B,WAAO;AAACJ,MAAAA,SAAS,EAAE,KAAZ;AAAmBD,MAAAA,KAAK,EAAE;AAA1B,KAAP;AACA;;AACD,SAAOE,iBAAP;AACA,CAXD;;AAaA,MAAMI,QAAQ,GAAIC,aAAD,IAAmB;AAAA;;AACnC,QAAM,CAACC,UAAD,EAAaC,QAAb,IAAyBX,UAAU,CACxCI,iBADwC,EAExCH,iBAFwC,CAAzC;AAKA,QAAMW,YAAY,GAAGH,aAAa,CAACC,UAAU,CAACR,KAAZ,CAAlC;AACA,QAAMW,QAAQ,GAAG,CAACD,YAAD,IAAiBF,UAAU,CAACP,SAA7C;;AAEA,QAAMW,kBAAkB,GAAGC,CAAC,IAAI;AAC/BJ,IAAAA,QAAQ,CAAC;AAACJ,MAAAA,IAAI,EAAE,OAAP;AAAgBL,MAAAA,KAAK,EAAEa,CAAC,CAACC,MAAF,CAASd;AAAhC,KAAD,CAAR;AACA,GAFD;;AAIA,QAAMe,gBAAgB,GAAGF,CAAC,IAAI;AAC7BJ,IAAAA,QAAQ,CAAC;AAACJ,MAAAA,IAAI,EAAE;AAAP,KAAD,CAAR;AACA,GAFD;;AAIA,QAAMW,KAAK,GAAG,MAAM;AACnBP,IAAAA,QAAQ,CAAC;AAACJ,MAAAA,IAAI,EAAE;AAAP,KAAD,CAAR;AACA,GAFD;;AAIA,SAAO;AACNL,IAAAA,KAAK,EAAEQ,UAAU,CAACR,KADZ;AAENiB,IAAAA,OAAO,EAAEP,YAFH;AAGNC,IAAAA,QAHM;AAINC,IAAAA,kBAJM;AAKNG,IAAAA,gBALM;AAMNC,IAAAA;AANM,GAAP;AAQA,CA7BD;;GAAMV,Q;;AA+BN,eAAeA,QAAf","sourcesContent":["import {useReducer} from 'react';\n\nconst initialInputState = {\n\tvalue: '',\n\tisTouched: false,\n};\n\nconst inputStateReducer = (state, action) => {\n\tif (action.type === 'INPUT') {\n\t\treturn {value: action.value, isTouched: state.isTouched};\n\t}\n\tif (action.type === 'BLUR') {\n\t\treturn {isTouched: true, value: state.value};\n\t}\n\tif (action.type === 'RESET') {\n\t\treturn {isTouched: false, value: ''};\n\t}\n\treturn inputStateReducer;\n};\n\nconst useInput = (validateValue) => {\n\tconst [inputState, dispatch] = useReducer(\n\t\tinputStateReducer,\n\t\tinitialInputState\n\t);\n\n\tconst valueIsValid = validateValue(inputState.value);\n\tconst hasError = !valueIsValid && inputState.isTouched;\n\n\tconst valueChangeHandler = e => {\n\t\tdispatch({type: 'INPUT', value: e.target.value});\n\t};\n\n\tconst inputBlurHandler = e => {\n\t\tdispatch({type: 'BLUR'});\n\t};\n\n\tconst reset = () => {\n\t\tdispatch({type: 'RESET'});\n\t};\n\n\treturn {\n\t\tvalue: inputState.value,\n\t\tisValid: valueIsValid,\n\t\thasError,\n\t\tvalueChangeHandler,\n\t\tinputBlurHandler,\n\t\treset,\n\t};\n};\n\nexport default useInput;"]},"metadata":{},"sourceType":"module"}