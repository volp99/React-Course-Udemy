{"ast":null,"code":"var _jsxFileName = \"/Users/stefanovolpatti/Web Development/react-complete-guide/19-Advanced-Redux/src/components/Shop/ProductItem.js\",\n    _s = $RefreshSig$();\n\nimport { useDispatch } from 'react-redux';\nimport { cartActions } from '../../store/cart-slice';\nimport Card from '../UI/Card';\nimport classes from './ProductItem.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProductItem = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    title,\n    price,\n    description,\n    id\n  } = props;\n\n  const addToCartHandler = () => {\n    const newTotalQuantity = cart.totalQuantity + 1;\n    const updatedItems = cart.items.slice(); // create copy via slice to avoid mutating original state\n\n    const existingItem = updatedItems.find(item => item.id === id);\n\n    if (existingItem) {\n      const updatedItem = { ...existingItem\n      }; // new object + copy existing properties to avoid state mutation\n\n      updatedItem.quantity++;\n      updatedItem.totalPrice = updatedItem.totalPrice + price;\n      const existingItemIndex = updatedItems.findIndex(item => item.id === id);\n      updatedItems[existingItemIndex] = updatedItem;\n    } else {\n      updatedItems.push({\n        id: id,\n        price: price,\n        quantity: 1,\n        totalPrice: price,\n        name: title\n      });\n    }\n\n    const newCart = {\n      totalQuantity: newTotalQuantity,\n      items: updatedItems\n    };\n    dispatch(cartActions.replaceCart(newCart)); // and then send Http request\n    // fetch('firebase-url', { method: 'POST', body: JSON.stringify(newCart) })\n    // dispatch(\n    //   cartActions.addItemToCart({\n    //     id,\n    //     title,\n    //     price,\n    //   })\n    // );\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: classes.item,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.price,\n          children: [\"$\", price.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addToCartHandler,\n          children: \"Add to Cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 3\n  }, this);\n};\n\n_s(ProductItem, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = ProductItem;\nexport default ProductItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductItem\");","map":{"version":3,"sources":["/Users/stefanovolpatti/Web Development/react-complete-guide/19-Advanced-Redux/src/components/Shop/ProductItem.js"],"names":["useDispatch","cartActions","Card","classes","ProductItem","props","dispatch","title","price","description","id","addToCartHandler","newTotalQuantity","cart","totalQuantity","updatedItems","items","slice","existingItem","find","item","updatedItem","quantity","totalPrice","existingItemIndex","findIndex","push","name","newCart","replaceCart","toFixed","actions"],"mappings":";;;AAAA,SAAQA,WAAR,QAA0B,aAA1B;AAEA,SAAQC,WAAR,QAA0B,wBAA1B;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,OAAP,MAAoB,0BAApB;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AAEA,QAAM;AAACO,IAAAA,KAAD;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,WAAf;AAA4BC,IAAAA;AAA5B,MAAkCL,KAAxC;;AAEA,QAAMM,gBAAgB,GAAG,MAAM;AAC9B,UAAMC,gBAAgB,GAAGC,IAAI,CAACC,aAAL,GAAqB,CAA9C;AAEA,UAAMC,YAAY,GAAGF,IAAI,CAACG,KAAL,CAAWC,KAAX,EAArB,CAH8B,CAGW;;AACzC,UAAMC,YAAY,GAAGH,YAAY,CAACI,IAAb,CAAmBC,IAAD,IAAUA,IAAI,CAACV,EAAL,KAAYA,EAAxC,CAArB;;AACA,QAAIQ,YAAJ,EAAkB;AACjB,YAAMG,WAAW,GAAG,EAAC,GAAGH;AAAJ,OAApB,CADiB,CACsB;;AACvCG,MAAAA,WAAW,CAACC,QAAZ;AACAD,MAAAA,WAAW,CAACE,UAAZ,GAAyBF,WAAW,CAACE,UAAZ,GAAyBf,KAAlD;AACA,YAAMgB,iBAAiB,GAAGT,YAAY,CAACU,SAAb,CACxBL,IAAD,IAAUA,IAAI,CAACV,EAAL,KAAYA,EADG,CAA1B;AAGAK,MAAAA,YAAY,CAACS,iBAAD,CAAZ,GAAkCH,WAAlC;AACA,KARD,MAQO;AACNN,MAAAA,YAAY,CAACW,IAAb,CAAkB;AACjBhB,QAAAA,EAAE,EAAEA,EADa;AAEjBF,QAAAA,KAAK,EAAEA,KAFU;AAGjBc,QAAAA,QAAQ,EAAE,CAHO;AAIjBC,QAAAA,UAAU,EAAEf,KAJK;AAKjBmB,QAAAA,IAAI,EAAEpB;AALW,OAAlB;AAOA;;AAED,UAAMqB,OAAO,GAAG;AACfd,MAAAA,aAAa,EAAEF,gBADA;AAEfI,MAAAA,KAAK,EAAED;AAFQ,KAAhB;AAKAT,IAAAA,QAAQ,CAACL,WAAW,CAAC4B,WAAZ,CAAwBD,OAAxB,CAAD,CAAR,CA5B8B,CA8B9B;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAxCD;;AA0CA,sBACC;AAAI,IAAA,SAAS,EAAEzB,OAAO,CAACiB,IAAvB;AAAA,2BACC,QAAC,IAAD;AAAA,8BACC;AAAA,gCACC;AAAA,oBAAKb;AAAL;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC;AAAK,UAAA,SAAS,EAAEJ,OAAO,CAACK,KAAxB;AAAA,0BAAiCA,KAAK,CAACsB,OAAN,CAAc,CAAd,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFD;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAKC;AAAA,kBAAIrB;AAAJ;AAAA;AAAA;AAAA;AAAA,cALD,eAMC;AAAK,QAAA,SAAS,EAAEN,OAAO,CAAC4B,OAAxB;AAAA,+BACC;AAAQ,UAAA,OAAO,EAAEpB,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cAND;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAcA,CA7DD;;GAAMP,W;UACYJ,W;;;KADZI,W;AA+DN,eAAeA,WAAf","sourcesContent":["import {useDispatch} from 'react-redux';\n\nimport {cartActions} from '../../store/cart-slice';\nimport Card from '../UI/Card';\nimport classes from './ProductItem.module.css';\n\nconst ProductItem = (props) => {\n\tconst dispatch = useDispatch();\n\n\tconst {title, price, description, id} = props;\n\n\tconst addToCartHandler = () => {\n\t\tconst newTotalQuantity = cart.totalQuantity + 1;\n\n\t\tconst updatedItems = cart.items.slice(); // create copy via slice to avoid mutating original state\n\t\tconst existingItem = updatedItems.find((item) => item.id === id);\n\t\tif (existingItem) {\n\t\t\tconst updatedItem = {...existingItem}; // new object + copy existing properties to avoid state mutation\n\t\t\tupdatedItem.quantity++;\n\t\t\tupdatedItem.totalPrice = updatedItem.totalPrice + price;\n\t\t\tconst existingItemIndex = updatedItems.findIndex(\n\t\t\t\t(item) => item.id === id\n\t\t\t);\n\t\t\tupdatedItems[existingItemIndex] = updatedItem;\n\t\t} else {\n\t\t\tupdatedItems.push({\n\t\t\t\tid: id,\n\t\t\t\tprice: price,\n\t\t\t\tquantity: 1,\n\t\t\t\ttotalPrice: price,\n\t\t\t\tname: title,\n\t\t\t});\n\t\t}\n\n\t\tconst newCart = {\n\t\t\ttotalQuantity: newTotalQuantity,\n\t\t\titems: updatedItems,\n\t\t};\n\n\t\tdispatch(cartActions.replaceCart(newCart));\n\n\t\t// and then send Http request\n\t\t// fetch('firebase-url', { method: 'POST', body: JSON.stringify(newCart) })\n\n\t\t// dispatch(\n\t\t//   cartActions.addItemToCart({\n\t\t//     id,\n\t\t//     title,\n\t\t//     price,\n\t\t//   })\n\t\t// );\n\t};\n\n\treturn (\n\t\t<li className={classes.item}>\n\t\t\t<Card>\n\t\t\t\t<header>\n\t\t\t\t\t<h3>{title}</h3>\n\t\t\t\t\t<div className={classes.price}>${price.toFixed(2)}</div>\n\t\t\t\t</header>\n\t\t\t\t<p>{description}</p>\n\t\t\t\t<div className={classes.actions}>\n\t\t\t\t\t<button onClick={addToCartHandler}>Add to Cart</button>\n\t\t\t\t</div>\n\t\t\t</Card>\n\t\t</li>\n\t);\n};\n\nexport default ProductItem;"]},"metadata":{},"sourceType":"module"}