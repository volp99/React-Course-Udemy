{"ast":null,"code":"var _jsxFileName = \"/Users/stefanovolpatti/Web Development/react-complete-guide/19-Advanced-Redux/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport { uiActions } from './store/ui-slice';\nimport Notification from './components/UI/Notification';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet isInitial = true;\n\nfunction App() {\n  _s();\n\n  const dispatch = useDispatch();\n  const showCart = useSelector(state => state.ui.cartIsVisible);\n  const cart = useSelector(state => state.cart);\n  const notification = useSelector(state => state.ui.notification); // \n\n  /*useEffect(() => {\n  \tconst sendCartData = async () => {\n  \t\tdispatch(\n  \t\t\tuiActions.showNotification({\n  \t\t\t\tstatus: 'pending',\n  \t\t\t\ttitle: 'Sending...',\n  \t\t\t\tmessage: 'Sending cart data!',\n  \t\t\t})\n  \t\t);\n  \t\tconst response = await fetch(\n  \t\t\t'https://redux-back-end-default-rtdb.europe-west1.firebasedatabase.app/cart.json',\n  \t\t\t{\n  \t\t\t\tmethod: 'PUT',\n  \t\t\t\tbody: JSON.stringify(cart),\n  \t\t\t}\n  \t\t);\n  \t\t\tif (!response.ok) {\n  \t\t\tthrow new Error('Sending cart data failed.');\n  \t\t}\n  \t\t\tdispatch(\n  \t\t\tuiActions.showNotification({\n  \t\t\t\tstatus: 'success',\n  \t\t\t\ttitle: 'Success!',\n  \t\t\t\tmessage: 'Sent cart data successfully!',\n  \t\t\t})\n  \t\t);\n  \t};\n  \t\tif (isInitial) {\n  \t\tisInitial = false;\n  \t\treturn;\n  \t}\n  \t\tsendCartData().catch((error) => {\n  \t\tdispatch(\n  \t\t\tuiActions.showNotification({\n  \t\t\t\tstatus: 'error',\n  \t\t\t\ttitle: 'Error!',\n  \t\t\t\tmessage: 'Sending cart data failed!',\n  \t\t\t})\n  \t\t);\n  \t});\n  }, [cart, dispatch]);*/\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [notification && /*#__PURE__*/_jsxDEV(Notification, {\n      status: notification.status,\n      title: notification.title,\n      message: notification.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      children: [showCart && /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(Products, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"FjbzMb+2u5sIiL9hITUjX/d+XVA=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/stefanovolpatti/Web Development/react-complete-guide/19-Advanced-Redux/src/App.js"],"names":["Fragment","useEffect","useDispatch","useSelector","Cart","Layout","Products","uiActions","Notification","isInitial","App","dispatch","showCart","state","ui","cartIsVisible","cart","notification","status","title","message"],"mappings":";;;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AAEA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;;AAEA,IAAIC,SAAS,GAAG,IAAhB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACd,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAMU,QAAQ,GAAGT,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACC,EAAN,CAASC,aAArB,CAA5B;AACA,QAAMC,IAAI,GAAGb,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACG,IAAlB,CAAxB;AACA,QAAMC,YAAY,GAAGd,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACC,EAAN,CAASG,YAArB,CAAhC,CAJc,CAMd;;AAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAMC,sBACC,QAAC,QAAD;AAAA,eACEA,YAAY,iBACZ,QAAC,YAAD;AACC,MAAA,MAAM,EAAEA,YAAY,CAACC,MADtB;AAEC,MAAA,KAAK,EAAED,YAAY,CAACE,KAFrB;AAGC,MAAA,OAAO,EAAEF,YAAY,CAACG;AAHvB;AAAA;AAAA;AAAA;AAAA,YAFF,eAQC,QAAC,MAAD;AAAA,iBACER,QAAQ,iBAAI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cADd,eAEC,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA,YARD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAeA;;GArEQF,G;UACSR,W,EACAC,W,EACJA,W,EACQA,W;;;KAJbO,G;AAuET,eAAeA,GAAf","sourcesContent":["import {Fragment, useEffect} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\n\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport {uiActions} from './store/ui-slice';\nimport Notification from './components/UI/Notification';\n\nlet isInitial = true;\n\nfunction App() {\n\tconst dispatch = useDispatch();\n\tconst showCart = useSelector((state) => state.ui.cartIsVisible);\n\tconst cart = useSelector((state) => state.cart);\n\tconst notification = useSelector((state) => state.ui.notification);\n\n\t// \n\n\t/*useEffect(() => {\n\t\tconst sendCartData = async () => {\n\t\t\tdispatch(\n\t\t\t\tuiActions.showNotification({\n\t\t\t\t\tstatus: 'pending',\n\t\t\t\t\ttitle: 'Sending...',\n\t\t\t\t\tmessage: 'Sending cart data!',\n\t\t\t\t})\n\t\t\t);\n\t\t\tconst response = await fetch(\n\t\t\t\t'https://redux-back-end-default-rtdb.europe-west1.firebasedatabase.app/cart.json',\n\t\t\t\t{\n\t\t\t\t\tmethod: 'PUT',\n\t\t\t\t\tbody: JSON.stringify(cart),\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tif (!response.ok) {\n\t\t\t\tthrow new Error('Sending cart data failed.');\n\t\t\t}\n\n\t\t\tdispatch(\n\t\t\t\tuiActions.showNotification({\n\t\t\t\t\tstatus: 'success',\n\t\t\t\t\ttitle: 'Success!',\n\t\t\t\t\tmessage: 'Sent cart data successfully!',\n\t\t\t\t})\n\t\t\t);\n\t\t};\n\n\t\tif (isInitial) {\n\t\t\tisInitial = false;\n\t\t\treturn;\n\t\t}\n\n\t\tsendCartData().catch((error) => {\n\t\t\tdispatch(\n\t\t\t\tuiActions.showNotification({\n\t\t\t\t\tstatus: 'error',\n\t\t\t\t\ttitle: 'Error!',\n\t\t\t\t\tmessage: 'Sending cart data failed!',\n\t\t\t\t})\n\t\t\t);\n\t\t});\n\t}, [cart, dispatch]);*/\n\n\treturn (\n\t\t<Fragment>\n\t\t\t{notification && (\n\t\t\t\t<Notification\n\t\t\t\t\tstatus={notification.status}\n\t\t\t\t\ttitle={notification.title}\n\t\t\t\t\tmessage={notification.message}\n\t\t\t\t/>\n\t\t\t)}\n\t\t\t<Layout>\n\t\t\t\t{showCart && <Cart/>}\n\t\t\t\t<Products/>\n\t\t\t</Layout>\n\t\t</Fragment>\n\t);\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}