{"ast":null,"code":"var _jsxFileName = \"/Users/stefanovolpatti/Web Development/react-complete-guide/15-Custom-React-Hooks/Realistic-Custom-Hook/src/components/NewTask/NewTask.js\",\n    _s = $RefreshSig$();\n\nimport Section from '../UI/Section';\nimport TaskForm from './TaskForm';\nimport useHttp from \"../../hooks/use-http\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewTask = props => {\n  _s();\n\n  const {\n    isLoading,\n    error,\n    sendRequest: sendTaskRequest\n  } = useHttp();\n\n  const enterTaskHandler = async taskText => {\n    const createTask = taskData => {\n      const generatedId = taskData.name; // firebase-specific => \"name\" contains generated id\n\n      const createdTask = {\n        id: generatedId,\n        text: taskText\n      };\n      props.onAddTask(createdTask);\n    };\n\n    sendTaskRequest({\n      url: 'https://react-http-a6058-default-rtdb.europe-west1.firebasedatabase.app/tasks.json',\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: {\n        text: taskText\n      }\n    }, createTask);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Section, {\n    children: [/*#__PURE__*/_jsxDEV(TaskForm, {\n      onEnterTask: enterTaskHandler,\n      loading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NewTask, \"flyXDYo9XtD2xRwNing8LFiPUr4=\", false, function () {\n  return [useHttp];\n});\n\n_c = NewTask;\nexport default NewTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTask\");","map":{"version":3,"sources":["/Users/stefanovolpatti/Web Development/react-complete-guide/15-Custom-React-Hooks/Realistic-Custom-Hook/src/components/NewTask/NewTask.js"],"names":["Section","TaskForm","useHttp","NewTask","props","isLoading","error","sendRequest","sendTaskRequest","enterTaskHandler","taskText","createTask","taskData","generatedId","name","createdTask","id","text","onAddTask","url","method","headers","body"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,eAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACvB,QAAM;AAACC,IAAAA,SAAD;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA,WAAW,EAAEC;AAAhC,MAAmDN,OAAO,EAAhE;;AAGA,QAAMO,gBAAgB,GAAG,MAAOC,QAAP,IAAoB;AACzC,UAAMC,UAAU,GAAIC,QAAD,IAAc;AAC7B,YAAMC,WAAW,GAAGD,QAAQ,CAACE,IAA7B,CAD6B,CACM;;AACnC,YAAMC,WAAW,GAAG;AAACC,QAAAA,EAAE,EAAEH,WAAL;AAAkBI,QAAAA,IAAI,EAAEP;AAAxB,OAApB;AAEAN,MAAAA,KAAK,CAACc,SAAN,CAAgBH,WAAhB;AACH,KALD;;AAMAP,IAAAA,eAAe,CACX;AACIW,MAAAA,GAAG,EAAE,oFADT;AAEIC,MAAAA,MAAM,EAAE,MAFZ;AAGIC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAHb;AAMIC,MAAAA,IAAI,EAAE;AAACL,QAAAA,IAAI,EAAEP;AAAP;AANV,KADW,EAQRC,UARQ,CAAf;AASH,GAhBD;;AAkBA,sBACI,QAAC,OAAD;AAAA,4BACI,QAAC,QAAD;AAAU,MAAA,WAAW,EAAEF,gBAAvB;AAAyC,MAAA,OAAO,EAAEJ;AAAlD;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKC,KAAK,iBAAI;AAAA,gBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,YAFd;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CA5BD;;GAAMH,O;UACuDD,O;;;KADvDC,O;AA8BN,eAAeA,OAAf","sourcesContent":["import Section from '../UI/Section';\nimport TaskForm from './TaskForm';\nimport useHttp from \"../../hooks/use-http\";\n\nconst NewTask = (props) => {\n    const {isLoading, error, sendRequest: sendTaskRequest} = useHttp();\n\n\n    const enterTaskHandler = async (taskText) => {\n        const createTask = (taskData) => {\n            const generatedId = taskData.name; // firebase-specific => \"name\" contains generated id\n            const createdTask = {id: generatedId, text: taskText};\n\n            props.onAddTask(createdTask);\n        }\n        sendTaskRequest(\n            {\n                url: 'https://react-http-a6058-default-rtdb.europe-west1.firebasedatabase.app/tasks.json',\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: {text: taskText}\n            }, createTask)\n    };\n\n    return (\n        <Section>\n            <TaskForm onEnterTask={enterTaskHandler} loading={isLoading}/>\n            {error && <p>{error}</p>}\n        </Section>\n    );\n};\n\nexport default NewTask;"]},"metadata":{},"sourceType":"module"}