{"ast":null,"code":"var _jsxFileName = \"/Users/stefanovolpatti/Web Development/react-complete-guide/15-Custom-React-Hooks/Realistic-Custom-Hook/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Tasks from './components/Tasks/Tasks';\nimport NewTask from './components/NewTask/NewTask';\nimport useHttp from \"./hooks/use-http\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [tasks, setTasks] = useState([]);\n  useHttp({\n    url: ''\n  });\n\n  const fetchTasks = async taskText => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch('https://react-http-a6058-default-rtdb.europe-west1.firebasedatabase.app/tasks.json');\n\n      if (!response.ok) {\n        throw new Error('Request failed!');\n      }\n\n      const data = await response.json();\n      const loadedTasks = [];\n\n      for (const taskKey in data) {\n        loadedTasks.push({\n          id: taskKey,\n          text: data[taskKey].text\n        });\n      }\n\n      setTasks(loadedTasks);\n    } catch (err) {\n      setError(err.message || 'Something went wrong!');\n    }\n\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  const taskAddHandler = task => {\n    setTasks(prevTasks => prevTasks.concat(task));\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NewTask, {\n      onAddTask: taskAddHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Tasks, {\n      items: tasks,\n      loading: isLoading,\n      error: error,\n      onFetch: fetchTasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"WHoLmzAMPD7nkcm9gecdSBRDU9c=\", false, function () {\n  return [useHttp];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/stefanovolpatti/Web Development/react-complete-guide/15-Custom-React-Hooks/Realistic-Custom-Hook/src/App.js"],"names":["React","useEffect","useState","Tasks","NewTask","useHttp","App","tasks","setTasks","url","fetchTasks","taskText","setIsLoading","setError","response","fetch","ok","Error","data","json","loadedTasks","taskKey","push","id","text","err","message","taskAddHandler","task","prevTasks","concat","isLoading","error"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,OAAP,MAAoB,kBAApB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACX,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACAG,EAAAA,OAAO,CAAC;AACJI,IAAAA,GAAG,EAAE;AADD,GAAD,CAAP;;AAIA,QAAMC,UAAU,GAAG,MAAOC,QAAP,IAAoB;AACnCC,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAC,IAAAA,QAAQ,CAAC,IAAD,CAAR;;AACA,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CACxB,oFADwB,CAA5B;;AAIA,UAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;AACd,cAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;AACH;;AAED,YAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;AAEA,YAAMC,WAAW,GAAG,EAApB;;AAEA,WAAK,MAAMC,OAAX,IAAsBH,IAAtB,EAA4B;AACxBE,QAAAA,WAAW,CAACE,IAAZ,CAAiB;AAACC,UAAAA,EAAE,EAAEF,OAAL;AAAcG,UAAAA,IAAI,EAAEN,IAAI,CAACG,OAAD,CAAJ,CAAcG;AAAlC,SAAjB;AACH;;AAEDhB,MAAAA,QAAQ,CAACY,WAAD,CAAR;AACH,KAlBD,CAkBE,OAAOK,GAAP,EAAY;AACVZ,MAAAA,QAAQ,CAACY,GAAG,CAACC,OAAJ,IAAe,uBAAhB,CAAR;AACH;;AACDd,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,GAzBD;;AA2BAX,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,UAAU;AACb,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMiB,cAAc,GAAIC,IAAD,IAAU;AAC7BpB,IAAAA,QAAQ,CAAEqB,SAAD,IAAeA,SAAS,CAACC,MAAV,CAAiBF,IAAjB,CAAhB,CAAR;AACH,GAFD;;AAIA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,4BACI,QAAC,OAAD;AAAS,MAAA,SAAS,EAAED;AAApB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,KAAD;AACI,MAAA,KAAK,EAAEpB,KADX;AAEI,MAAA,OAAO,EAAEwB,SAFb;AAGI,MAAA,KAAK,EAAEC,KAHX;AAII,MAAA,OAAO,EAAEtB;AAJb;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;GApDQJ,G;UAELD,O;;;KAFKC,G;AAsDT,eAAeA,GAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport Tasks from './components/Tasks/Tasks';\nimport NewTask from './components/NewTask/NewTask';\nimport useHttp from \"./hooks/use-http\";\n\nfunction App() {\n    const [tasks, setTasks] = useState([]);\n    useHttp({\n        url: ''\n    })\n\n    const fetchTasks = async (taskText) => {\n        setIsLoading(true);\n        setError(null);\n        try {\n            const response = await fetch(\n                'https://react-http-a6058-default-rtdb.europe-west1.firebasedatabase.app/tasks.json'\n            );\n\n            if (!response.ok) {\n                throw new Error('Request failed!');\n            }\n\n            const data = await response.json();\n\n            const loadedTasks = [];\n\n            for (const taskKey in data) {\n                loadedTasks.push({id: taskKey, text: data[taskKey].text});\n            }\n\n            setTasks(loadedTasks);\n        } catch (err) {\n            setError(err.message || 'Something went wrong!');\n        }\n        setIsLoading(false);\n    };\n\n    useEffect(() => {\n        fetchTasks();\n    }, []);\n\n    const taskAddHandler = (task) => {\n        setTasks((prevTasks) => prevTasks.concat(task));\n    };\n\n    return (\n        <React.Fragment>\n            <NewTask onAddTask={taskAddHandler}/>\n            <Tasks\n                items={tasks}\n                loading={isLoading}\n                error={error}\n                onFetch={fetchTasks}\n            />\n        </React.Fragment>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}