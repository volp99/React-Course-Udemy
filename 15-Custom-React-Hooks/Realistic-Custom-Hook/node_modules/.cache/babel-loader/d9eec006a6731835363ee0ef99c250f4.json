{"ast":null,"code":"var _jsxFileName = \"/Users/stefanovolpatti/Web Development/react-complete-guide/15-Custom-React-Hooks/Realistic-Custom-Hook/src/components/NewTask/NewTask.js\",\n    _s = $RefreshSig$();\n\nimport Section from '../UI/Section';\nimport TaskForm from './TaskForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewTask = props => {\n  _s();\n\n  const {\n    isLoading,\n    error,\n    sendRequest: sendTaskRequest\n  } = useHttp();\n\n  const createTask = taskData => {\n    const generatedId = taskData.name; // firebase-specific => \"name\" contains generated id\n\n    const createdTask = {\n      id: generatedId,\n      text: taskText\n    };\n    props.onAddTask(createdTask);\n  };\n\n  const enterTaskHandler = async taskText => {\n    sendTaskRequest({\n      url: 'https://react-http-a6058-default-rtdb.europe-west1.firebasedatabase.app/tasks.json',\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: {\n        text: taskText\n      }\n    }, createTask);\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch('https://react-http-a6058-default-rtdb.europe-west1.firebasedatabase.app/tasks.json', {\n        method: 'POST',\n        body: JSON.stringify({\n          text: taskText\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      if (!response.ok) {\n        throw new Error('Request failed!');\n      }\n\n      const data = await response.json();\n    } catch (err) {\n      setError(err.message || 'Something went wrong!');\n    }\n\n    setIsLoading(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Section, {\n    children: [/*#__PURE__*/_jsxDEV(TaskForm, {\n      onEnterTask: enterTaskHandler,\n      loading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NewTask, \"flyXDYo9XtD2xRwNing8LFiPUr4=\", true);\n\n_c = NewTask;\nexport default NewTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTask\");","map":{"version":3,"sources":["/Users/stefanovolpatti/Web Development/react-complete-guide/15-Custom-React-Hooks/Realistic-Custom-Hook/src/components/NewTask/NewTask.js"],"names":["Section","TaskForm","NewTask","props","isLoading","error","sendRequest","sendTaskRequest","useHttp","createTask","taskData","generatedId","name","createdTask","id","text","taskText","onAddTask","enterTaskHandler","url","method","headers","body","setIsLoading","setError","response","fetch","JSON","stringify","ok","Error","data","json","err","message"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,eAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACvB,QAAM;AAACC,IAAAA,SAAD;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA,WAAW,EAAEC;AAAhC,MAAmDC,OAAO,EAAhE;;AAEA,QAAMC,UAAU,GAAIC,QAAD,IAAc;AAC7B,UAAMC,WAAW,GAAGD,QAAQ,CAACE,IAA7B,CAD6B,CACM;;AACnC,UAAMC,WAAW,GAAG;AAACC,MAAAA,EAAE,EAAEH,WAAL;AAAkBI,MAAAA,IAAI,EAAEC;AAAxB,KAApB;AAEAb,IAAAA,KAAK,CAACc,SAAN,CAAgBJ,WAAhB;AACH,GALD;;AAOA,QAAMK,gBAAgB,GAAG,MAAOF,QAAP,IAAoB;AACzCT,IAAAA,eAAe,CAAC;AACZY,MAAAA,GAAG,EAAE,oFADO;AAEZC,MAAAA,MAAM,EAAE,MAFI;AAGZC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAHG;AAMZC,MAAAA,IAAI,EAAE;AAACP,QAAAA,IAAI,EAAEC;AAAP;AANM,KAAD,EAOZP,UAPY,CAAf;AASAc,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAC,IAAAA,QAAQ,CAAC,IAAD,CAAR;;AACA,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CACxB,oFADwB,EAExB;AACIN,QAAAA,MAAM,EAAE,MADZ;AAEIE,QAAAA,IAAI,EAAEK,IAAI,CAACC,SAAL,CAAe;AAACb,UAAAA,IAAI,EAAEC;AAAP,SAAf,CAFV;AAGIK,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX;AAHb,OAFwB,CAA5B;;AAWA,UAAI,CAACI,QAAQ,CAACI,EAAd,EAAkB;AACd,cAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;AACH;;AAED,YAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAT,EAAnB;AAEH,KAlBD,CAkBE,OAAOC,GAAP,EAAY;AACVT,MAAAA,QAAQ,CAACS,GAAG,CAACC,OAAJ,IAAe,uBAAhB,CAAR;AACH;;AACDX,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,GAlCD;;AAoCA,sBACI,QAAC,OAAD;AAAA,4BACI,QAAC,QAAD;AAAU,MAAA,WAAW,EAAEL,gBAAvB;AAAyC,MAAA,OAAO,EAAEd;AAAlD;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKC,KAAK,iBAAI;AAAA,gBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,YAFd;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CApDD;;GAAMH,O;;KAAAA,O;AAsDN,eAAeA,OAAf","sourcesContent":["import Section from '../UI/Section';\nimport TaskForm from './TaskForm';\n\nconst NewTask = (props) => {\n    const {isLoading, error, sendRequest: sendTaskRequest} = useHttp();\n\n    const createTask = (taskData) => {\n        const generatedId = taskData.name; // firebase-specific => \"name\" contains generated id\n        const createdTask = {id: generatedId, text: taskText};\n\n        props.onAddTask(createdTask);\n    }\n\n    const enterTaskHandler = async (taskText) => {\n        sendTaskRequest({\n            url: 'https://react-http-a6058-default-rtdb.europe-west1.firebasedatabase.app/tasks.json',\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: {text: taskText}\n        }, createTask)\n        \n        setIsLoading(true);\n        setError(null);\n        try {\n            const response = await fetch(\n                'https://react-http-a6058-default-rtdb.europe-west1.firebasedatabase.app/tasks.json',\n                {\n                    method: 'POST',\n                    body: JSON.stringify({text: taskText}),\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                }\n            );\n\n            if (!response.ok) {\n                throw new Error('Request failed!');\n            }\n\n            const data = await response.json();\n\n        } catch (err) {\n            setError(err.message || 'Something went wrong!');\n        }\n        setIsLoading(false);\n    };\n\n    return (\n        <Section>\n            <TaskForm onEnterTask={enterTaskHandler} loading={isLoading}/>\n            {error && <p>{error}</p>}\n        </Section>\n    );\n};\n\nexport default NewTask;"]},"metadata":{},"sourceType":"module"}