{"ast":null,"code":"var _jsxFileName = \"/Users/stefanovolpatti/Web Development/react-complete-guide/15-Custom-React-Hooks/Realistic-Custom-Hook/src/components/NewTask/NewTask.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport useHttp from \"../../hooks/use-http\";\nimport Section from '../UI/Section';\nimport TaskForm from './TaskForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewTask = props => {\n  _s();\n\n  useHttp();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const enterTaskHandler = async taskText => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch('https://react-http-a6058-default-rtdb.europe-west1.firebasedatabase.app/tasks.json', {\n        method: 'POST',\n        body: JSON.stringify({\n          text: taskText\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      if (!response.ok) {\n        throw new Error('Request failed!');\n      }\n\n      const data = await response.json();\n      const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n\n      const createdTask = {\n        id: generatedId,\n        text: taskText\n      };\n      props.onAddTask(createdTask);\n    } catch (err) {\n      setError(err.message || 'Something went wrong!');\n    }\n\n    setIsLoading(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Section, {\n    children: [/*#__PURE__*/_jsxDEV(TaskForm, {\n      onEnterTask: enterTaskHandler,\n      loading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NewTask, \"xfIFWt+GfMAQZxiAgk2n7WzcTGQ=\", false, function () {\n  return [useHttp];\n});\n\n_c = NewTask;\nexport default NewTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTask\");","map":{"version":3,"sources":["/Users/stefanovolpatti/Web Development/react-complete-guide/15-Custom-React-Hooks/Realistic-Custom-Hook/src/components/NewTask/NewTask.js"],"names":["useState","useHttp","Section","TaskForm","NewTask","props","isLoading","setIsLoading","error","setError","enterTaskHandler","taskText","response","fetch","method","body","JSON","stringify","text","headers","ok","Error","data","json","generatedId","name","createdTask","id","onAddTask","err","message"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACvBJ,EAAAA,OAAO;AACP,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;;AAEA,QAAMU,gBAAgB,GAAG,MAAOC,QAAP,IAAoB;AACzCJ,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,IAAAA,QAAQ,CAAC,IAAD,CAAR;;AACA,QAAI;AACA,YAAMG,QAAQ,GAAG,MAAMC,KAAK,CACxB,oFADwB,EAExB;AACIC,QAAAA,MAAM,EAAE,MADZ;AAEIC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACC,UAAAA,IAAI,EAAEP;AAAP,SAAf,CAFV;AAGIQ,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX;AAHb,OAFwB,CAA5B;;AAWA,UAAI,CAACP,QAAQ,CAACQ,EAAd,EAAkB;AACd,cAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;AACH;;AAED,YAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAT,EAAnB;AAEA,YAAMC,WAAW,GAAGF,IAAI,CAACG,IAAzB,CAlBA,CAkB+B;;AAC/B,YAAMC,WAAW,GAAG;AAACC,QAAAA,EAAE,EAAEH,WAAL;AAAkBN,QAAAA,IAAI,EAAEP;AAAxB,OAApB;AAEAN,MAAAA,KAAK,CAACuB,SAAN,CAAgBF,WAAhB;AACH,KAtBD,CAsBE,OAAOG,GAAP,EAAY;AACVpB,MAAAA,QAAQ,CAACoB,GAAG,CAACC,OAAJ,IAAe,uBAAhB,CAAR;AACH;;AACDvB,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,GA7BD;;AA+BA,sBACI,QAAC,OAAD;AAAA,4BACI,QAAC,QAAD;AAAU,MAAA,WAAW,EAAEG,gBAAvB;AAAyC,MAAA,OAAO,EAAEJ;AAAlD;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKE,KAAK,iBAAI;AAAA,gBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,YAFd;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CA1CD;;GAAMJ,O;UACFH,O;;;KADEG,O;AA4CN,eAAeA,OAAf","sourcesContent":["import {useState} from 'react';\nimport useHttp from \"../../hooks/use-http\";\nimport Section from '../UI/Section';\nimport TaskForm from './TaskForm';\n\nconst NewTask = (props) => {\n    useHttp()\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    const enterTaskHandler = async (taskText) => {\n        setIsLoading(true);\n        setError(null);\n        try {\n            const response = await fetch(\n                'https://react-http-a6058-default-rtdb.europe-west1.firebasedatabase.app/tasks.json',\n                {\n                    method: 'POST',\n                    body: JSON.stringify({text: taskText}),\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                }\n            );\n\n            if (!response.ok) {\n                throw new Error('Request failed!');\n            }\n\n            const data = await response.json();\n\n            const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n            const createdTask = {id: generatedId, text: taskText};\n\n            props.onAddTask(createdTask);\n        } catch (err) {\n            setError(err.message || 'Something went wrong!');\n        }\n        setIsLoading(false);\n    };\n\n    return (\n        <Section>\n            <TaskForm onEnterTask={enterTaskHandler} loading={isLoading}/>\n            {error && <p>{error}</p>}\n        </Section>\n    );\n};\n\nexport default NewTask;"]},"metadata":{},"sourceType":"module"}