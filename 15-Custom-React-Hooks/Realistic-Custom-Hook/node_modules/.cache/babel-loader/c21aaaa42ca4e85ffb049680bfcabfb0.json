{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useCallback, useState } from 'react';\n\nconst useHttp = applyData => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const sendRequest = useCallback(async requestCoinfig => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch(requestCoinfig.url, {\n        method: requestCoinfig.method ? requestCoinfig.method : 'GET',\n        headers: requestCoinfig.headers ? requestCoinfig.headers : {},\n        body: JSON.stringify(requestCoinfig.body) ? JSON.stringify(requestCoinfig.body) : 'null'\n      });\n\n      if (!response.ok) {\n        throw new Error('Request failed!');\n      }\n\n      const data = await response.json();\n      applyData(data);\n    } catch (err) {\n      setError(err.message || 'Something went wrong!');\n    }\n\n    setIsLoading(false);\n  }, [applyData]);\n  return {\n    isLoading,\n    error,\n    sendRequest\n  };\n};\n\n_s(useHttp, \"FFcdbk+kTfFKRpY6eKN2uj4p9Os=\");\n\nexport default useHttp;","map":{"version":3,"sources":["/Users/stefanovolpatti/Web Development/react-complete-guide/15-Custom-React-Hooks/Realistic-Custom-Hook/src/hooks/use-http.js"],"names":["React","useCallback","useState","useHttp","applyData","isLoading","setIsLoading","error","setError","sendRequest","requestCoinfig","response","fetch","url","method","headers","body","JSON","stringify","ok","Error","data","json","err","message"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,WAAf,EAA4BC,QAA5B,QAA2C,OAA3C;;AAEA,MAAMC,OAAO,GAAIC,SAAD,IAAe;AAAA;;AAC3B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,IAAD,CAAlC;AAEA,QAAMO,WAAW,GAAGR,WAAW,CAAC,MAAOS,cAAP,IAA0B;AACtDJ,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,IAAAA,QAAQ,CAAC,IAAD,CAAR;;AACA,QAAI;AACA,YAAMG,QAAQ,GAAG,MAAMC,KAAK,CACxBF,cAAc,CAACG,GADS,EACJ;AAChBC,QAAAA,MAAM,EAAEJ,cAAc,CAACI,MAAf,GAAwBJ,cAAc,CAACI,MAAvC,GAAgD,KADxC;AAEhBC,QAAAA,OAAO,EAAEL,cAAc,CAACK,OAAf,GAAyBL,cAAc,CAACK,OAAxC,GAAkD,EAF3C;AAGhBC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,cAAc,CAACM,IAA9B,IAAsCC,IAAI,CAACC,SAAL,CAAeR,cAAc,CAACM,IAA9B,CAAtC,GAA4E;AAHlE,OADI,CAA5B;;AAQA,UAAI,CAACL,QAAQ,CAACQ,EAAd,EAAkB;AACd,cAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;AACH;;AAED,YAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAT,EAAnB;AACAlB,MAAAA,SAAS,CAACiB,IAAD,CAAT;AAEH,KAhBD,CAgBE,OAAOE,GAAP,EAAY;AACVf,MAAAA,QAAQ,CAACe,GAAG,CAACC,OAAJ,IAAe,uBAAhB,CAAR;AACH;;AACDlB,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,GAvB8B,EAuB5B,CAACF,SAAD,CAvB4B,CAA/B;AAyBA,SAAO;AACHC,IAAAA,SADG;AAEHE,IAAAA,KAFG;AAGHE,IAAAA;AAHG,GAAP;AAKH,CAlCD;;GAAMN,O;;AAmCN,eAAeA,OAAf","sourcesContent":["import React, {useCallback, useState} from 'react';\n\nconst useHttp = (applyData) => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    const sendRequest = useCallback(async (requestCoinfig) => {\n        setIsLoading(true);\n        setError(null);\n        try {\n            const response = await fetch(\n                requestCoinfig.url, {\n                    method: requestCoinfig.method ? requestCoinfig.method : 'GET',\n                    headers: requestCoinfig.headers ? requestCoinfig.headers : {},\n                    body: JSON.stringify(requestCoinfig.body) ? JSON.stringify(requestCoinfig.body) : 'null',\n                }\n            );\n\n            if (!response.ok) {\n                throw new Error('Request failed!');\n            }\n\n            const data = await response.json();\n            applyData(data)\n\n        } catch (err) {\n            setError(err.message || 'Something went wrong!');\n        }\n        setIsLoading(false);\n    }, [applyData]);\n\n    return {\n        isLoading,\n        error,\n        sendRequest,\n    }\n}\nexport default useHttp;"]},"metadata":{},"sourceType":"module"}