{"ast":null,"code":"var _jsxFileName = \"/Users/stefanovolpatti/Web Development/react-complete-guide/15-Custom-React-Hooks/Realistic-Custom-Hook/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Tasks from './components/Tasks/Tasks';\nimport NewTask from './components/NewTask/NewTask';\nimport useHttp from \"./hooks/use-http\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [tasks, setTasks] = useState([]);\n  const {\n    isLoading,\n    error,\n    sendRequest: fetchTasks\n  } = useHttp();\n  useEffect(() => {\n    const transformTasks = taskObj => {\n      const loadedTasks = [];\n\n      for (const taskKey in taskObj) {\n        loadedTasks.push({\n          id: taskKey,\n          text: taskObj[taskKey].text\n        });\n      }\n\n      setTasks(loadedTasks);\n    };\n\n    fetchTasks({\n      url: 'https://react-http-a6058-default-rtdb.europe-west1.firebasedatabase.app/tasks.json'\n    }, transformTasks);\n  }, [fetchTasks]);\n\n  const taskAddHandler = task => {\n    setTasks(prevTasks => prevTasks.concat(task));\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NewTask, {\n      onAddTask: taskAddHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Tasks, {\n      items: tasks,\n      loading: isLoading,\n      error: error,\n      onFetch: fetchTasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"TArFHRbA+zNTFa9DK38NK99y1AI=\", false, function () {\n  return [useHttp];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/stefanovolpatti/Web Development/react-complete-guide/15-Custom-React-Hooks/Realistic-Custom-Hook/src/App.js"],"names":["React","useEffect","useState","Tasks","NewTask","useHttp","App","tasks","setTasks","isLoading","error","sendRequest","fetchTasks","transformTasks","taskObj","loadedTasks","taskKey","push","id","text","url","taskAddHandler","task","prevTasks","concat"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,OAAP,MAAoB,kBAApB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACX,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAM;AAACO,IAAAA,SAAD;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA,WAAW,EAAEC;AAAhC,MAA8CP,OAAO,EAA3D;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMY,cAAc,GAAKC,OAAD,IAAa;AACjC,YAAMC,WAAW,GAAG,EAApB;;AAEA,WAAK,MAAMC,OAAX,IAAsBF,OAAtB,EAA+B;AAC3BC,QAAAA,WAAW,CAACE,IAAZ,CAAiB;AAACC,UAAAA,EAAE,EAAEF,OAAL;AAAcG,UAAAA,IAAI,EAAEL,OAAO,CAACE,OAAD,CAAP,CAAiBG;AAArC,SAAjB;AACH;;AAEDX,MAAAA,QAAQ,CAACO,WAAD,CAAR;AACH,KARD;;AASAH,IAAAA,UAAU,CAAC;AAACQ,MAAAA,GAAG,EAAE;AAAN,KAAD,EACNP,cADM,CAAV;AAEH,GAZQ,EAYN,CAACD,UAAD,CAZM,CAAT;;AAcA,QAAMS,cAAc,GAAIC,IAAD,IAAU;AAC7Bd,IAAAA,QAAQ,CAAEe,SAAD,IAAeA,SAAS,CAACC,MAAV,CAAiBF,IAAjB,CAAhB,CAAR;AACH,GAFD;;AAIA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,4BACI,QAAC,OAAD;AAAS,MAAA,SAAS,EAAED;AAApB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,KAAD;AACI,MAAA,KAAK,EAAEd,KADX;AAEI,MAAA,OAAO,EAAEE,SAFb;AAGI,MAAA,KAAK,EAAEC,KAHX;AAII,MAAA,OAAO,EAAEE;AAJb;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;GAlCQN,G;UAG+CD,O;;;KAH/CC,G;AAoCT,eAAeA,GAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport Tasks from './components/Tasks/Tasks';\nimport NewTask from './components/NewTask/NewTask';\nimport useHttp from \"./hooks/use-http\";\n\nfunction App() {\n    const [tasks, setTasks] = useState([]);\n\n    const {isLoading, error, sendRequest: fetchTasks} = useHttp()\n\n    useEffect(() => {\n        const transformTasks = ((taskObj) => {\n            const loadedTasks = [];\n\n            for (const taskKey in taskObj) {\n                loadedTasks.push({id: taskKey, text: taskObj[taskKey].text});\n            }\n\n            setTasks(loadedTasks);\n        })\n        fetchTasks({url: 'https://react-http-a6058-default-rtdb.europe-west1.firebasedatabase.app/tasks.json'},\n            transformTasks);\n    }, [fetchTasks]);\n\n    const taskAddHandler = (task) => {\n        setTasks((prevTasks) => prevTasks.concat(task));\n    };\n\n    return (\n        <React.Fragment>\n            <NewTask onAddTask={taskAddHandler}/>\n            <Tasks\n                items={tasks}\n                loading={isLoading}\n                error={error}\n                onFetch={fetchTasks}\n            />\n        </React.Fragment>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}