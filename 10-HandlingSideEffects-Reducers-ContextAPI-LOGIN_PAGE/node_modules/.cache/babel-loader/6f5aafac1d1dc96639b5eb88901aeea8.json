{"ast":null,"code":"var _jsxFileName = \"/Users/stefanovolpatti/Web Development/react-complete-guide/10-HandlingSideEffects-Reducers-ContextAPI/src/components/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useReducer, useState } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst emailReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    return {\n      value: action.val,\n      isValid: action.val.includes('@')\n    };\n  }\n\n  if (action.type === 'INPUT_BLUR') {\n    return {\n      value: '',\n      isValid: false\n    };\n  }\n\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nconst Login = props => {\n  _s();\n\n  /*   const [enteredEmail, setEnteredEmail] = useState('');\n     const [emailIsValid, setEmailIsValid] = useState();*/\n  const [enteredPassword, setEnteredPassword] = useState('');\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: '',\n    isValid: false\n  });\n  useEffect(() => {\n    console.log('running');\n    return () => {\n      console.log('cleanup');\n    };\n  }, []);\n  /* useEffect(() => {\n       const identifier = setTimeout(() => {\n           console.log('check validity')\n           setFormIsValid(\n               enteredEmail.includes('@') && enteredPassword.trim().length > 6\n           );\n       }, 500);\n        return () => {\n           console.log('clean')\n           clearTimeout(identifier)\n       }\n    }, [enteredEmail, enteredPassword])*/\n\n  const emailChangeHandler = event => {\n    dispatchEmail({\n      type: 'USER_INPUT',\n      val: event.target.value\n    });\n    setFormIsValid(event.target.value.includes('@') && enteredPassword.trim().length > 6);\n  };\n\n  const passwordChangeHandler = event => {\n    setEnteredPassword(event.target.value);\n    setFormIsValid(emailState.isValid && event.target.value.trim().length > 6);\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({\n      type: 'INPUT_BLUR'\n    });\n  };\n\n  const validatePasswordHandler = () => {\n    setPasswordIsValid(enteredPassword.trim().length > 6);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onLogin(emailState.value, enteredPassword);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${emailState.isValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: emailState.value,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${passwordIsValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: enteredPassword,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"WKOk7DWha33h4GQS/x5NLd7peYk=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/stefanovolpatti/Web Development/react-complete-guide/10-HandlingSideEffects-Reducers-ContextAPI/src/components/Login/Login.js"],"names":["React","useEffect","useReducer","useState","Card","classes","Button","emailReducer","state","action","type","value","val","isValid","includes","Login","props","enteredPassword","setEnteredPassword","passwordIsValid","setPasswordIsValid","formIsValid","setFormIsValid","emailState","dispatchEmail","console","log","emailChangeHandler","event","target","trim","length","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","control","invalid","actions","btn"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,UAA1B,EAAsCC,QAAtC,QAAqD,OAArD;AAEA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;;AAEA,MAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACpC,MAAIA,MAAM,CAACC,IAAP,KAAgB,YAApB,EAAkC;AAC9B,WAAO;AAACC,MAAAA,KAAK,EAAEF,MAAM,CAACG,GAAf;AAAoBC,MAAAA,OAAO,EAAEJ,MAAM,CAACG,GAAP,CAAWE,QAAX,CAAoB,GAApB;AAA7B,KAAP;AACH;;AACD,MAAIL,MAAM,CAACC,IAAP,KAAgB,YAApB,EAAkC;AAC9B,WAAO;AAACC,MAAAA,KAAK,EAAE,EAAR;AAAYE,MAAAA,OAAO,EAAE;AAArB,KAAP;AACH;;AACD,SAAO;AAACF,IAAAA,KAAK,EAAE,EAAR;AAAYE,IAAAA,OAAO,EAAE;AAArB,GAAP;AACH,CARD;;AAUA,MAAME,KAAK,GAAIC,KAAD,IAAW;AAAA;;AACrB;AACJ;AACI,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCf,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACgB,eAAD,EAAkBC,kBAAlB,IAAwCjB,QAAQ,EAAtD;AACA,QAAM,CAACkB,WAAD,EAAcC,cAAd,IAAgCnB,QAAQ,CAAC,KAAD,CAA9C;AAEA,QAAM,CAACoB,UAAD,EAAaC,aAAb,IAA8BtB,UAAU,CAACK,YAAD,EAAe;AACzDI,IAAAA,KAAK,EAAE,EADkD;AAEzDE,IAAAA,OAAO,EAAE;AAFgD,GAAf,CAA9C;AAKAZ,EAAAA,SAAS,CAAC,MAAM;AACZwB,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,WAAO,MAAM;AACTD,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH,KAFD;AAGH,GALQ,EAKN,EALM,CAAT;AAOA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAII,QAAMC,kBAAkB,GAAIC,KAAD,IAAW;AAClCJ,IAAAA,aAAa,CAAC;AAACd,MAAAA,IAAI,EAAE,YAAP;AAAqBE,MAAAA,GAAG,EAAEgB,KAAK,CAACC,MAAN,CAAalB;AAAvC,KAAD,CAAb;AAEAW,IAAAA,cAAc,CACVM,KAAK,CAACC,MAAN,CAAalB,KAAb,CAAmBG,QAAnB,CAA4B,GAA5B,KAAoCG,eAAe,CAACa,IAAhB,GAAuBC,MAAvB,GAAgC,CAD1D,CAAd;AAGH,GAND;;AAQA,QAAMC,qBAAqB,GAAIJ,KAAD,IAAW;AACrCV,IAAAA,kBAAkB,CAACU,KAAK,CAACC,MAAN,CAAalB,KAAd,CAAlB;AAEAW,IAAAA,cAAc,CACVC,UAAU,CAACV,OAAX,IAAsBe,KAAK,CAACC,MAAN,CAAalB,KAAb,CAAmBmB,IAAnB,GAA0BC,MAA1B,GAAmC,CAD/C,CAAd;AAGH,GAND;;AAQA,QAAME,oBAAoB,GAAG,MAAM;AAC/BT,IAAAA,aAAa,CAAC;AAACd,MAAAA,IAAI,EAAE;AAAP,KAAD,CAAb;AACH,GAFD;;AAIA,QAAMwB,uBAAuB,GAAG,MAAM;AAClCd,IAAAA,kBAAkB,CAACH,eAAe,CAACa,IAAhB,GAAuBC,MAAvB,GAAgC,CAAjC,CAAlB;AACH,GAFD;;AAIA,QAAMI,aAAa,GAAIP,KAAD,IAAW;AAC7BA,IAAAA,KAAK,CAACQ,cAAN;AACApB,IAAAA,KAAK,CAACqB,OAAN,CAAcd,UAAU,CAACZ,KAAzB,EAAgCM,eAAhC;AACH,GAHD;;AAKA,sBACI,QAAC,IAAD;AAAM,IAAA,SAAS,EAAEZ,OAAO,CAACiC,KAAzB;AAAA,2BACI;AAAM,MAAA,QAAQ,EAAEH,aAAhB;AAAA,8BACI;AACI,QAAA,SAAS,EAAG,GAAE9B,OAAO,CAACkC,OAAQ,IAC1BhB,UAAU,CAACV,OAAX,KAAuB,KAAvB,GAA+BR,OAAO,CAACmC,OAAvC,GAAiD,EACpD,EAHL;AAAA,gCAKI;AAAO,UAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,eAMI;AACI,UAAA,IAAI,EAAC,OADT;AAEI,UAAA,EAAE,EAAC,OAFP;AAGI,UAAA,KAAK,EAAEjB,UAAU,CAACZ,KAHtB;AAII,UAAA,QAAQ,EAAEgB,kBAJd;AAKI,UAAA,MAAM,EAAEM;AALZ;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAeI;AACI,QAAA,SAAS,EAAG,GAAE5B,OAAO,CAACkC,OAAQ,IAC1BpB,eAAe,KAAK,KAApB,GAA4Bd,OAAO,CAACmC,OAApC,GAA8C,EACjD,EAHL;AAAA,gCAKI;AAAO,UAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,eAMI;AACI,UAAA,IAAI,EAAC,UADT;AAEI,UAAA,EAAE,EAAC,UAFP;AAGI,UAAA,KAAK,EAAEvB,eAHX;AAII,UAAA,QAAQ,EAAEe,qBAJd;AAKI,UAAA,MAAM,EAAEE;AALZ;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAfJ,eA6BI;AAAK,QAAA,SAAS,EAAE7B,OAAO,CAACoC,OAAxB;AAAA,+BACI,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAEpC,OAAO,CAACqC,GAAzC;AAA8C,UAAA,QAAQ,EAAE,CAACrB,WAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cA7BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAuCH,CAtGD;;GAAMN,K;;KAAAA,K;AAwGN,eAAeA,KAAf","sourcesContent":["import React, {useEffect, useReducer, useState} from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\n\nconst emailReducer = (state, action) => {\n    if (action.type === 'USER_INPUT') {\n        return {value: action.val, isValid: action.val.includes('@')}\n    }\n    if (action.type === 'INPUT_BLUR') {\n        return {value: '', isValid: false}\n    }\n    return {value: '', isValid: false}\n}\n\nconst Login = (props) => {\n    /*   const [enteredEmail, setEnteredEmail] = useState('');\n       const [emailIsValid, setEmailIsValid] = useState();*/\n    const [enteredPassword, setEnteredPassword] = useState('');\n    const [passwordIsValid, setPasswordIsValid] = useState();\n    const [formIsValid, setFormIsValid] = useState(false);\n\n    const [emailState, dispatchEmail] = useReducer(emailReducer, {\n        value: '',\n        isValid: false,\n    });\n\n    useEffect(() => {\n        console.log('running')\n        return () => {\n            console.log('cleanup')\n        }\n    }, [])\n\n    /* useEffect(() => {\n         const identifier = setTimeout(() => {\n             console.log('check validity')\n             setFormIsValid(\n                 enteredEmail.includes('@') && enteredPassword.trim().length > 6\n             );\n         }, 500);\n\n         return () => {\n             console.log('clean')\n             clearTimeout(identifier)\n         }\n\n     }, [enteredEmail, enteredPassword])*/\n\n    const emailChangeHandler = (event) => {\n        dispatchEmail({type: 'USER_INPUT', val: event.target.value})\n\n        setFormIsValid(\n            event.target.value.includes('@') && enteredPassword.trim().length > 6\n        );\n    };\n\n    const passwordChangeHandler = (event) => {\n        setEnteredPassword(event.target.value);\n\n        setFormIsValid(\n            emailState.isValid && event.target.value.trim().length > 6\n        );\n    };\n\n    const validateEmailHandler = () => {\n        dispatchEmail({type: 'INPUT_BLUR'})\n    };\n\n    const validatePasswordHandler = () => {\n        setPasswordIsValid(enteredPassword.trim().length > 6);\n    };\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n        props.onLogin(emailState.value, enteredPassword);\n    };\n\n    return (\n        <Card className={classes.login}>\n            <form onSubmit={submitHandler}>\n                <div\n                    className={`${classes.control} ${\n                        emailState.isValid === false ? classes.invalid : ''\n                    }`}\n                >\n                    <label htmlFor=\"email\">E-Mail</label>\n                    <input\n                        type=\"email\"\n                        id=\"email\"\n                        value={emailState.value}\n                        onChange={emailChangeHandler}\n                        onBlur={validateEmailHandler}\n                    />\n                </div>\n                <div\n                    className={`${classes.control} ${\n                        passwordIsValid === false ? classes.invalid : ''\n                    }`}\n                >\n                    <label htmlFor=\"password\">Password</label>\n                    <input\n                        type=\"password\"\n                        id=\"password\"\n                        value={enteredPassword}\n                        onChange={passwordChangeHandler}\n                        onBlur={validatePasswordHandler}\n                    />\n                </div>\n                <div className={classes.actions}>\n                    <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n                        Login\n                    </Button>\n                </div>\n            </form>\n        </Card>\n    );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}