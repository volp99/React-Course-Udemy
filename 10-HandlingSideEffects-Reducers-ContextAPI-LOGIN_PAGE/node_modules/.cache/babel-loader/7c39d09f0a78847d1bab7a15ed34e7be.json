{"ast":null,"code":"var _jsxFileName = \"/Users/stefanovolpatti/Web Development/react-complete-guide/10-HandlingSideEffects-Reducers-ContextAPI-LOGIN_PAGE/src/components/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useReducer, useRef, useState } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport AuthContext from \"../../store/auth-context\";\nimport Input from \"../UI/Input/Input\"; // email reducer\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst emailReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    return {\n      value: action.val,\n      isValid: action.val.includes('@')\n    };\n  }\n\n  if (action.type === 'INPUT_BLUR') {\n    return {\n      value: state.value,\n      isValid: state.value.includes('@')\n    };\n  }\n\n  return {\n    value: '',\n    isValid: false\n  };\n}; // password reducer\n\n\nconst passwordReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    return {\n      value: action.val,\n      isValid: action.val.trim().length > 6\n    };\n  }\n\n  if (action.type === 'INPUT_BLUR') {\n    return {\n      value: state.value,\n      isValid: state.value.trim().length > 6\n    };\n  }\n\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nconst Login = props => {\n  _s();\n\n  /*  const [enteredEmail, setEnteredEmail] = useState('');\n    const [emailIsValid, setEmailIsValid] = useState();\n    const [enteredPassword, setEnteredPassword] = useState('');\n    const [passwordIsValid, setPasswordIsValid] = useState();*/\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: '',\n    isValid: null\n  });\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: '',\n    isValid: null\n  });\n  const authCtx = useContext(AuthContext);\n  const {\n    isValid: emailIsValid\n  } = emailState;\n  const {\n    isValid: passwordIsValid\n  } = passwordState;\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  useEffect(() => {\n    console.log('RUNNING');\n    return () => {\n      console.log('cleanup');\n    };\n  }, []);\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      console.log('Check from validity!');\n      setFormIsValid(emailIsValid && passwordIsValid);\n    }, 500);\n    return () => {\n      console.log('CLEANUP');\n      clearTimeout(identifier);\n    };\n  }, [emailIsValid, passwordIsValid]);\n\n  const emailChangeHandler = event => {\n    dispatchEmail({\n      type: 'USER_INPUT',\n      val: event.target.value\n    });\n    /*   setFormIsValid(\n           event.target.value.includes('@') && passwordState.isValid\n       );*/\n  };\n\n  const passwordChangeHandler = event => {\n    dispatchPassword({\n      type: 'USER_INPUT',\n      val: event.target.value\n    });\n    /* setFormIsValid(\n         emailState.isValid && event.target.value.trim().length > 6\n     );*/\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({\n      type: 'INPUT_BLUR'\n    });\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({\n      type: 'INPUT_BLUR'\n    });\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n\n    if (formIsValid) {\n      authCtx.onLogin(emailState.value, passwordState.value);\n    } else if (!emailIsValid) {\n      emailInputRef.current.focus();\n    } else {\n      passwordInputRef.current.focus();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        ref: emailInputRef,\n        id: \"email\",\n        label: \"Email\",\n        type: \"email\",\n        isValid: emailIsValid,\n        value: emailState.value,\n        onChange: emailChangeHandler,\n        onBlur: validateEmailHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        ref: passwordInputRef,\n        id: \"password\",\n        label: \"Password\",\n        type: \"password\",\n        isValid: passwordIsValid,\n        value: passwordState.value,\n        onChange: passwordChangeHandler,\n        onBlur: validatePasswordHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"3ffNBOcQBWbbwqK/LeVQ2/4Y/5M=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/stefanovolpatti/Web Development/react-complete-guide/10-HandlingSideEffects-Reducers-ContextAPI-LOGIN_PAGE/src/components/Login/Login.js"],"names":["React","useContext","useEffect","useReducer","useRef","useState","Card","classes","Button","AuthContext","Input","emailReducer","state","action","type","value","val","isValid","includes","passwordReducer","trim","length","Login","props","formIsValid","setFormIsValid","emailState","dispatchEmail","passwordState","dispatchPassword","authCtx","emailIsValid","passwordIsValid","emailInputRef","passwordInputRef","console","log","identifier","setTimeout","clearTimeout","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","current","focus","login","actions","btn"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useReducer, useRef, useState} from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport AuthContext from \"../../store/auth-context\";\nimport Input from \"../UI/Input/Input\";\n\n// email reducer\nconst emailReducer = (state, action) => {\n    if (action.type === 'USER_INPUT') {\n        return {value: action.val, isValid: action.val.includes('@')}\n    }\n    if (action.type === 'INPUT_BLUR') {\n        return {value: state.value, isValid: state.value.includes('@')}\n    }\n    return {value: '', isValid: false}\n}\n\n// password reducer\nconst passwordReducer = (state, action) => {\n    if (action.type === 'USER_INPUT') {\n        return {value: action.val, isValid: action.val.trim().length > 6}\n    }\n    if (action.type === 'INPUT_BLUR') {\n        return {value: state.value, isValid: state.value.trim().length > 6}\n    }\n    return {value: '', isValid: false}\n}\n\nconst Login = (props) => {\n\n    /*  const [enteredEmail, setEnteredEmail] = useState('');\n      const [emailIsValid, setEmailIsValid] = useState();\n      const [enteredPassword, setEnteredPassword] = useState('');\n      const [passwordIsValid, setPasswordIsValid] = useState();*/\n\n    const [formIsValid, setFormIsValid] = useState(false);\n\n    const [emailState, dispatchEmail] = useReducer(emailReducer, {\n        value: '',\n        isValid: null,\n    });\n\n    const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n        value: '',\n        isValid: null,\n    })\n\n    const authCtx = useContext(AuthContext);\n\n    const {isValid: emailIsValid} = emailState;\n    const {isValid: passwordIsValid} = passwordState;\n\n    const emailInputRef = useRef()\n    const passwordInputRef = useRef()\n\n    useEffect(() => {\n        console.log('RUNNING')\n        return () => {\n            console.log('cleanup')\n        }\n    }, [])\n\n    useEffect(() => {\n        const identifier = setTimeout(() => {\n            console.log('Check from validity!')\n            setFormIsValid(\n                emailIsValid && passwordIsValid\n            );\n        }, 500);\n\n        return () => {\n            console.log('CLEANUP')\n            clearTimeout(identifier)\n        }\n\n    }, [emailIsValid, passwordIsValid])\n\n    const emailChangeHandler = (event) => {\n        dispatchEmail({type: 'USER_INPUT', val: event.target.value})\n\n        /*   setFormIsValid(\n               event.target.value.includes('@') && passwordState.isValid\n           );*/\n    };\n\n    const passwordChangeHandler = (event) => {\n        dispatchPassword({type: 'USER_INPUT', val: event.target.value})\n\n        /* setFormIsValid(\n             emailState.isValid && event.target.value.trim().length > 6\n         );*/\n    };\n\n    const validateEmailHandler = () => {\n        dispatchEmail({type: 'INPUT_BLUR'})\n    };\n\n    const validatePasswordHandler = () => {\n        dispatchPassword({type: 'INPUT_BLUR'})\n\n    };\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n        if (formIsValid) {\n            authCtx.onLogin(emailState.value, passwordState.value);\n        } else if (!emailIsValid) {\n            emailInputRef.current.focus()\n        } else {\n            passwordInputRef.current.focus()\n        }\n    };\n\n    return (\n        <Card className={classes.login}>\n            <form onSubmit={submitHandler}>\n                <Input\n                    ref={emailInputRef}\n                    id=\"email\"\n                    label=\"Email\"\n                    type=\"email\"\n                    isValid={emailIsValid}\n                    value={emailState.value}\n                    onChange={emailChangeHandler}\n                    onBlur={validateEmailHandler}\n                />\n                <Input\n                    ref={passwordInputRef}\n                    id=\"password\"\n                    label=\"Password\"\n                    type=\"password\"\n                    isValid={passwordIsValid}\n                    value={passwordState.value}\n                    onChange={passwordChangeHandler}\n                    onBlur={validatePasswordHandler}\n                />\n                <div className={classes.actions}>\n                    <Button type=\"submit\" className={classes.btn}>\n                        Login\n                    </Button>\n                </div>\n            </form>\n        </Card>\n    );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}