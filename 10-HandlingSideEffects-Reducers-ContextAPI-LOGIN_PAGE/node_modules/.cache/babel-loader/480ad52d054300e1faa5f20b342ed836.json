{"ast":null,"code":"var _jsxFileName = \"/Users/stefanovolpatti/Web Development/react-complete-guide/10-HandlingSideEffects-Reducers-ContextAPI/src/components/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useReducer, useState } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst emailReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    return {\n      value: action.val,\n      isValid: action.val.includes('@')\n    };\n  }\n\n  if (action.type === 'INPUT_BLUR') {\n    return {\n      value: state.value,\n      isValid: state.value.includes('@')\n    };\n  }\n\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nconst passwordReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    return {\n      value: action.val,\n      isValid: action.val.trim().length > 6\n    };\n  }\n\n  if (action.type === 'INPUT_BLUR') {\n    return {\n      value: state.value,\n      isValid: action.value.trim().length > 6\n    };\n  }\n};\n\nconst Login = props => {\n  _s();\n\n  /*  const [enteredEmail, setEnteredEmail] = useState('');\n    const [emailIsValid, setEmailIsValid] = useState();\n    const [enteredPassword, setEnteredPassword] = useState('');\n    const [passwordIsValid, setPasswordIsValid] = useState();*/\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: '',\n    isValid: null\n  });\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: '',\n    isValid: null\n  });\n  const {\n    isValid: emailIsValid\n  } = emailState;\n  const {\n    isValid: passwordIsValid\n  } = passwordState;\n  useEffect(() => {\n    console.log('RUNNING');\n    return () => {\n      console.log('cleanup');\n    };\n  }, []);\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      console.log('Check from validity!');\n      setFormIsValid(emailIsValid && passwordIsValid);\n    }, 500);\n    return () => {\n      console.log('CLEANUP');\n      clearTimeout(identifier);\n    };\n  }, [emailIsValid, passwordIsValid]);\n\n  const emailChangeHandler = event => {\n    dispatchEmail({\n      type: 'USER_INPUT',\n      val: event.target.value\n    });\n    /*   setFormIsValid(\n           event.target.value.includes('@') && passwordState.isValid\n       );*/\n  };\n\n  const passwordChangeHandler = event => {\n    dispatchPassword({\n      type: 'USER_INPUT',\n      val: event.target.value\n    });\n    /* setFormIsValid(\n         emailState.isValid && event.target.value.trim().length > 6\n     );*/\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({\n      type: 'INPUT_BLUR'\n    });\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({\n      type: 'INPUT_BLUR'\n    });\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onLogin(emailState.value, passwordState.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${emailState.isValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: emailState.value,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${passwordState.isValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: passwordState.value,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"xGbIRXA3OQiYwpPN/4Ga7tYV48k=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/stefanovolpatti/Web Development/react-complete-guide/10-HandlingSideEffects-Reducers-ContextAPI/src/components/Login/Login.js"],"names":["React","useEffect","useReducer","useState","Card","classes","Button","emailReducer","state","action","type","value","val","isValid","includes","passwordReducer","trim","length","Login","props","formIsValid","setFormIsValid","emailState","dispatchEmail","passwordState","dispatchPassword","emailIsValid","passwordIsValid","console","log","identifier","setTimeout","clearTimeout","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","control","invalid","actions","btn"],"mappings":"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","sourcesContent":["import React, {useEffect, useReducer, useState} from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\n\nconst emailReducer = (state, action) => {\n    if (action.type === 'USER_INPUT') {\n        return {value: action.val, isValid: action.val.includes('@')}\n    }\n    if (action.type === 'INPUT_BLUR') {\n        return {value: state.value, isValid: state.value.includes('@')}\n    }\n    return {value: '', isValid: false}\n}\n\nconst passwordReducer = (state, action) => {\n    if (action.type === 'USER_INPUT') {\n        return {value: action.val, isValid: action.val.trim().length > 6}\n    }\n    if (action.type === 'INPUT_BLUR') {\n        return {value: state.value, isValid: action.value.trim().length > 6}\n    }\n}\n\nconst Login = (props) => {\n\n    /*  const [enteredEmail, setEnteredEmail] = useState('');\n      const [emailIsValid, setEmailIsValid] = useState();\n      const [enteredPassword, setEnteredPassword] = useState('');\n      const [passwordIsValid, setPasswordIsValid] = useState();*/\n\n    const [formIsValid, setFormIsValid] = useState(false);\n\n    const [emailState, dispatchEmail] = useReducer(emailReducer, {\n        value: '',\n        isValid: null,\n    });\n\n    const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n        value: '',\n        isValid: null,\n    })\n\n    const {isValid: emailIsValid} = emailState;\n    const {isValid: passwordIsValid} = passwordState;\n\n    useEffect(() => {\n        console.log('RUNNING')\n        return () => {\n            console.log('cleanup')\n        }\n    }, [])\n\n    useEffect(() => {\n        const identifier = setTimeout(() => {\n            console.log('Check from validity!')\n            setFormIsValid(\n                emailIsValid && passwordIsValid\n            );\n        }, 500);\n\n        return () => {\n            console.log('CLEANUP')\n            clearTimeout(identifier)\n        }\n\n    }, [emailIsValid, passwordIsValid])\n\n    const emailChangeHandler = (event) => {\n        dispatchEmail({type: 'USER_INPUT', val: event.target.value})\n\n        /*   setFormIsValid(\n               event.target.value.includes('@') && passwordState.isValid\n           );*/\n    };\n\n    const passwordChangeHandler = (event) => {\n        dispatchPassword({type: 'USER_INPUT', val: event.target.value})\n\n        /* setFormIsValid(\n             emailState.isValid && event.target.value.trim().length > 6\n         );*/\n    };\n\n    const validateEmailHandler = () => {\n        dispatchEmail({type: 'INPUT_BLUR'})\n    };\n\n    const validatePasswordHandler = () => {\n        dispatchPassword({type: 'INPUT_BLUR'})\n\n    };\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n        props.onLogin(emailState.value, passwordState.value);\n    };\n\n    return (\n        <Card className={classes.login}>\n            <form onSubmit={submitHandler}>\n                <div\n                    className={`${classes.control} ${\n                        emailState.isValid === false ? classes.invalid : ''\n                    }`}\n                >\n                    <label htmlFor=\"email\">E-Mail</label>\n                    <input\n                        type=\"email\"\n                        id=\"email\"\n                        value={emailState.value}\n                        onChange={emailChangeHandler}\n                        onBlur={validateEmailHandler}\n                    />\n                </div>\n                <div\n                    className={`${classes.control} ${\n                        passwordState.isValid === false ? classes.invalid : ''\n                    }`}\n                >\n                    <label htmlFor=\"password\">Password</label>\n                    <input\n                        type=\"password\"\n                        id=\"password\"\n                        value={passwordState.value}\n                        onChange={passwordChangeHandler}\n                        onBlur={validatePasswordHandler}\n                    />\n                </div>\n                <div className={classes.actions}>\n                    <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n                        Login\n                    </Button>\n                </div>\n            </form>\n        </Card>\n    );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}