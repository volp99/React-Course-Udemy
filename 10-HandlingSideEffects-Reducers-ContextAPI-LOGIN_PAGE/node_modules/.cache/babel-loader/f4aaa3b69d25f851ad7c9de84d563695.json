{"ast":null,"code":"var _jsxFileName = \"/Users/stefanovolpatti/Web Development/react-complete-guide/10-HandlingSideEffects-Reducers-ContextAPI/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Login from './components/Login/Login';\nimport Home from './components/Home/Home';\nimport MainHeader from './components/MainHeader/MainHeader';\nimport AuthContext from \"./store/auth-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n    localStorage.setItem('isLoggedIn', '1');\n    setIsLoggedIn(true);\n  };\n\n  useEffect(() => {\n    const storedUserLoggedInformation = localStorage.getItem('isLoggedIn');\n\n    if (storedUserLoggedInformation === '1') {\n      setIsLoggedIn(true);\n    }\n  }, []);\n\n  const logoutHandler = () => {\n    localStorage.removeItem('isLoggedIn');\n    setIsLoggedIn(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn: isLoggedIn\n    },\n    children: [/*#__PURE__*/_jsxDEV(MainHeader, {\n      onLogout: logoutHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [!isLoggedIn && /*#__PURE__*/_jsxDEV(Login, {\n        onLogin: loginHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 33\n      }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(Home, {\n        onLogout: logoutHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"fKLMlyFH2GMrhNeUDpp+0z1yiCo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/stefanovolpatti/Web Development/react-complete-guide/10-HandlingSideEffects-Reducers-ContextAPI/src/App.js"],"names":["React","useEffect","useState","Login","Home","MainHeader","AuthContext","App","isLoggedIn","setIsLoggedIn","loginHandler","email","password","localStorage","setItem","storedUserLoggedInformation","getItem","logoutHandler","removeItem"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AAEA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACX,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,KAAD,CAA5C;;AAEA,QAAMQ,YAAY,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACtC;AACA;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmC,GAAnC;AACAL,IAAAA,aAAa,CAAC,IAAD,CAAb;AACH,GALD;;AAOAR,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMc,2BAA2B,GAAGF,YAAY,CAACG,OAAb,CAAqB,YAArB,CAApC;;AACA,QAAID,2BAA2B,KAAK,GAApC,EAAyC;AACrCN,MAAAA,aAAa,CAAC,IAAD,CAAb;AACH;AACJ,GALQ,EAKN,EALM,CAAT;;AAOA,QAAMQ,aAAa,GAAG,MAAM;AACxBJ,IAAAA,YAAY,CAACK,UAAb,CAAwB,YAAxB;AACAT,IAAAA,aAAa,CAAC,KAAD,CAAb;AACH,GAHD;;AAKA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AACzBD,MAAAA,UAAU,EAAEA;AADa,KAA7B;AAAA,4BAGI,QAAC,UAAD;AAAY,MAAA,QAAQ,EAAES;AAAtB;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAA,iBACK,CAACT,UAAD,iBAAe,QAAC,KAAD;AAAO,QAAA,OAAO,EAAEE;AAAhB;AAAA;AAAA;AAAA;AAAA,cADpB,EAEKF,UAAU,iBAAI,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAES;AAAhB;AAAA;AAAA;AAAA;AAAA,cAFnB;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;GAjCQV,G;;KAAAA,G;AAmCT,eAAeA,GAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\n\nimport Login from './components/Login/Login';\nimport Home from './components/Home/Home';\nimport MainHeader from './components/MainHeader/MainHeader';\nimport AuthContext from \"./store/auth-context\";\n\nfunction App() {\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n    const loginHandler = (email, password) => {\n        // We should of course check email and password\n        // But it's just a dummy/ demo anyways\n        localStorage.setItem('isLoggedIn', '1')\n        setIsLoggedIn(true);\n    };\n\n    useEffect(() => {\n        const storedUserLoggedInformation = localStorage.getItem('isLoggedIn')\n        if (storedUserLoggedInformation === '1') {\n            setIsLoggedIn(true)\n        }\n    }, [])\n\n    const logoutHandler = () => {\n        localStorage.removeItem('isLoggedIn')\n        setIsLoggedIn(false);\n    };\n\n    return (\n        <AuthContext.Provider value={{\n            isLoggedIn: isLoggedIn,\n        }}>\n            <MainHeader onLogout={logoutHandler}/>\n            <main>\n                {!isLoggedIn && <Login onLogin={loginHandler}/>}\n                {isLoggedIn && <Home onLogout={logoutHandler}/>}\n            </main>\n        </AuthContext.Provider>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}